local azk   = require('azk')
local app   = require('azk.app')
local utils = require('azk.utils')
local sha2  = require('azk.utils.sha')
local shell = require('azk.cli.shell')
local box   = require('azk.box')
local luker = require('luker')

local path     = require('pl.path')
local tablex   = require('pl.tablex')
local pl_utils = require('pl.utils')

local os = require('os')

local function __provision(steps, dir, from, image)
  local file = path.join(dir, "Dockerfile")
  local data = { "# Docker file generated by azk" }

  data[#data+1] = ("FROM %s"):format(from)

  tablex.foreachi(steps, function(step)
    data[#data+1] =
      (step:match('^#.*') and "RUN echo '%s' $'\\n'" or "RUN %s"):format(step)
  end)

  data[#data+1] = ("RUN echo '%s' > /etc/azk_image"):format(image)

  path.mkdir(dir)
  pl_utils.writefile(file, table.concat(data, "\n"))

  return luker.build_image({ target = dir, tag = image })
end

-- TODO: replace by git lib or not :)
local git = path.join(azk.root_path, "libexec", "azk-git")
local function git_clone(repoUrl, version, dir)
  return os.execute(("%s %s %s %s"):format(git, repoUrl, dir, version))
end

local function check_image(imagem_name, force)
  shell.info("[image] searching: " .. imagem_name)
  local image = { image = imagem_name }
  local result, status = luker.image(image)
  if status == 200 then
    shell.info("[image] already provisioned: " .. imagem_name)
    if not force then
      return false
    end
    luker.remove_image(image)
  else
    shell.info("[image] not found: " .. imagem_name)
  end
  return true
end

function provision(box_info, options)
  local options    = options or {}
  local box_path   = nil
  local dir        = nil
  local imagem_name = box_info.full_name

  -- Remove old image
  if not check_image(imagem_name, options['force']) then
    return true
  end
  shell.info("[image] provision it ...")

  -- By path
  if box_info['type'] == "path" then
    box_path = box_info.path
    dir = path.join(azk.boxes_path, sha2.hash256(imagem_name))

  -- By github
  elseif box_info['type'] == "github" then
    box_path = path.join(azk.boxes_path, box_info.path)
    dir = box_path
    print(git_clone(box_info.repository, box_info.version, box_path))
  end

  local result, _app, err, code

  if box_info['type'] == "docker" then
    result, _, code = luker.pull_imagem({ imagem = imagem_name })
  else
    result, _app, err = app.new(box_path)
    if not result then
      shell.error(err)
      return false
    end

    result, _, code = __provision(_app.content.build, dir, _app.from, imagem_name)
  end

  if result then
    shell.info("[image] provisioned: " .. imagem_name)
    return true
  end
  return false
end

return provision
