{"version":3,"file":"log.js","sources":["../../../src/utils/log.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,CAAA,YAAY,kBAAoB,CAAC;UCArC,CAAA,OAAO,CFAsB,KAAK,CEAR;;;;AFCtB,CAAJ,EAAI,CAAA,OAAO,EAAG,CAAA,OAAO,CAAC,SAAS,CAAC,CAAC;AAE7B,CAAJ,EAAI,CAAA,GAAG,EAAG,IAAI,CAAA,OAAO,OAAO,EAAE,CAAC;AAG/B,CAAA,EAAG,IAAI,CAAC,OAAO,WAAW,KAAK,CAAE;AAC/B,CAAA,SAAQ,CAAE,CAAA,MAAM,CAAC,WAAW,CAAC;AAC7B,CAAA,MAAK,CAAE,QAAO;AACd,CAAA,SAAQ,CAAE,KAAI;AACd,CAAA,KAAI,CAAE,MAAK;CAAA,AACZ,CAAC,CAAC;AAGC,CAAJ,EAAI,CAAA,YAAY,EAAG;AACjB,CAAA,iBAAgB,CAAE,KAAI;AACtB,CAAA,SAAQ,CAAE,KAAI;AACd,CAAA,MAAK,CAAE,CAAA,MAAM,CAAC,oBAAoB,CAAC;CAAA,AACpC,CAAA;CACD,GAAI,MAAM,CAAC,KAAK,CAAC,CAAA,EAAI,OAAM,CAAE;AAC3B,CAAA,IAAG,IAAI,CAAC,OAAO,WAAW,QAAQ,CAAE,aAAY,CAAC,CAAC;CACnD;AAED,CAFC,AAEA,KAAK,CAAC,OAAO,OAAO,YAAG,EAAE,CAAE,CAAA,MAAM;AAChC,CAAA,IAAG,EAAI,MAAM,EAAA,KAAI,EAAC,EAAG,UAAS,AAAO;CGvB3B,QAAS,GAAA,OAAoB,GAAE;CAAE,aAAoB,EAAC,CACjD,OAAoB,CAAA,SAAS,OAAO,CAAE,OAAmB;AAC5D,CAAA,eAAoC,EAAG,CAAA,SAAS,MAAmB,CAAC;AHsB9E,CGtB8E,SHsBvE,CAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,YIzBzB,CAAA,eAAe,SAAS,CJyBK,IAAI,CIzBU,EJyBR,CAAC;GACjC,CAAA;GACD,CAAC;AAEH,CAAA,EAAG,gBAAgB,aAAI,KAAK,CAAK;AAC/B,CAAA,IAAG,OAAO,CAAC,OAAO,WAAW,QAAQ,CAAC,CAAC;AACvC,CAAA,aAAY,MAAM,EAAG,MAAK,CAAC;AAC3B,CAAA,IAAG,IAAI,CAAC,OAAO,WAAW,QAAQ,CAAE,aAAY,CAAC,CAAC;CACnD,CAAA,CAAA;;AKjCD,CAAA,KAAM,QAAQ;CCAd,UAAwB;CAAE,cAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CLoCnC","sourcesContent":["import { _, config, t } from 'azk';\nvar winston = require('winston');\n\nvar log = new winston.Logger();\n\n// File log\nlog.add(winston.transports.File, {\n  filename: config('paths:log'),\n  level: 'debug', //config('logs_level:file'),\n  colorize: true,\n  json: false,\n});\n\n// Console log\nvar console_opts = {\n  handleExceptions: true,\n  colorize: true,\n  level: config('logs_level:console')\n}\nif (config('env') != 'test') {\n  log.add(winston.transports.Console, console_opts);\n}\n\n_.each(winston.levels, (__, method) => {\n  log[`${method}_t`] = function(...args) {\n    return this[method](t(...args));\n  }\n});\n\nlog.setConsoleLevel = (level) => {\n  log.remove(winston.transports.Console);\n  console_opts.level = level;\n  log.add(winston.transports.Console, console_opts);\n}\n\nexport { log }\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.toObject($__placeholder__0)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}