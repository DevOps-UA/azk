{"version":3,"file":"pid.js","sources":["../../../src/utils/pid.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,CAAA,YAAY,kBAAoB,CAAC;UCArC,CAAA,OAAO,CFAyB,KAAK,CEAX;;;;ACAtB,CAAJ,EAAI,MHEG,SAAM,IAAG,CACF,IAAI,CAAE;AAChB,CAAA,KAAI,KAAK,EAAG,KAAI,CAAC;AACjB,CAAA,KAAI,IAAI,EAAI,KAAI,CAAC;CAEjB,KAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAE;AACvB,CAAA,OAAI,IAAI,EAAG,CAAA,QAAQ,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;GACvD;CGToC,AHSpC,AACF,CGVsC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CJY3B,IAAI,QAAO,EAAG;CACZ,OAAI,IAAI,IAAI,CAAE;CACZ,QAAI;AACF,CAAA,cAAO,KAAK,CAAC,IAAI,IAAI,CAAE,EAAC,CAAC,CAAC;CAC1B,aAAO,KAAI,CAAC;OACb,CAAC,OAAO,CAAC,CAAE,GAAG;CAAA,IAChB;AACD,CADC,SACM,MAAK,CAAC;GACd;CAED,OAAM,CAAN,UAAO,AAAU,CAAE;OAAZ,IAAG,6CAAG,KAAI;AACf,CAAA,OAAI,IAAI,EAAG,CAAA,GAAG,GAAI,CAAA,IAAI,IAAI,CAAC;CAC3B,OAAI,IAAI,QAAQ,CAAE;AAChB,CAAA,OAAE,cAAc,CAAC,IAAI,KAAK,CAAE,CAAA,IAAI,IAAI,CAAC,CAAC;KACvC,KAAM;AACL,CAAA,SAAI,OAAO,EAAE,CAAC;KACf;CAAA,EACF;CAED,OAAM,CAAN,UAAO,CAAE;CACP,OAAI,EAAE,WAAW,CAAC,IAAI,KAAK,CAAC,CAAE;AAC5B,CAAA,OAAE,WAAW,CAAC,IAAI,KAAK,CAAC,CAAC;AACzB,CAAA,SAAI,IAAI,EAAG,KAAI,CAAC;KACjB;CAAA,EACF;CAED,KAAI,CAAJ,UAAK,CAAE;CACL,OAAI,IAAI,QAAQ,CAAE;AAChB,CAAA,YAAO,KAAK,CAAC,IAAI,IAAI,CAAE,UAAS,CAAC,CAAC;KACnC;AACD,CADC,OACG,IAAI,EAAG,KAAI,CAAC;AAChB,CAAA,OAAI,OAAO,EAAE,CAAC;GACf;CAAA,KI5CmF;ACAtF,CAAA,KAAM,QAAQ;CCAd,UAAwB;CAAE,cAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CL8CnC","sourcesContent":["import { fs, path, defer } from 'azk';\n\nexport class Pid {\n  constructor(file) {\n    this.file = file;\n    this.pid  = null;\n\n    if (fs.existsSync(file)) {\n      this.pid = parseInt(fs.readFileSync(file).toString());\n    }\n  }\n\n  get running() {\n    if (this.pid) {\n      try {\n        process.kill(this.pid, 0);\n        return true;\n      } catch (_) { }\n    }\n    return false;\n  }\n\n  update(pid = null) {\n    this.pid = pid || this.pid;\n    if (this.running) {\n      fs.writeFileSync(this.file, this.pid);\n    } else {\n      this.unlink();\n    }\n  }\n\n  unlink() {\n    if (fs.existsSync(this.file)) {\n      fs.unlinkSync(this.file);\n      this.pid = null;\n    }\n  }\n\n  term() {\n    if (this.running) {\n      process.kill(this.pid, 'SIGTERM');\n    }\n    this.pid = null;\n    this.update();\n  }\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}