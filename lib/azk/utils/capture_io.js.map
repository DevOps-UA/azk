{"version":3,"file":"capture_io.js","sources":["../../../src/utils/capture_io.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,CAAA,YAAY,yBAAoB,CAAC;UCArC,CAAA,OAAO,CFAc,WAAW,CEAN;;;AFEtB,CAAJ,EAAI,CAAA,aAAa,EAAG,CAAA,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAE1C,CAAJ,EAAI,CAAA,QAAQ,EAAG;AACb,CAAA,OAAM,CAAE,IAAI,cAAa,EAAE;AAC3B,CAAA,OAAM,CAAE,IAAI,cAAa,CAAC,CAAE,MAAM,CAAE,CAAA,OAAO,OAAO,CAAE,CAAC;CAAA,AACtD,CAAA;CAED,OAAS,WAAU,CAAC,KAAK;CACvB,OAAO,CAAA,CAAC,KAAK,CAAC,IAAI;AACZ,CAAJ,MAAI,CAAA,MAAM,EAAG;AAAE,CAAA,WAAM,CAAE,GAAE;AAAE,CAAA,WAAM,CAAE,GAAE;CAAA,IAAE,CAAC;AAGxC,CAAA,IAAC,KAAK,CAAC,QAAQ,YAAG,OAAO,CAAE,CAAA,GAAG;AAC5B,CAAA,YAAO,QAAQ,WAAE,MAAM,CAAE,CAAA,QAAQ,CAAE,CAAA,EAAE,CAAK;AACxC,CAAA,aAAM,CAAC,GAAG,CAAC,GAAI,OAAM,CAAC;CACtB,aAAO,MAAK,CAAC;OACd,EAAC,CAAC;OACH,CAAC;AAEC,CAAJ,MAAI,CAAA,IAAI,aAAI,GAAG;AACb,CAAA,MAAC,KAAK,CAAC,QAAQ,YAAG,OAAO;cAAK,CAAA,OAAO,QAAQ,EAAE;SAAC,CAAC;CACjD,UAAM,IAAG,CAAC;MACX,CAAA;CAED,MAAI;AACE,CAAJ,QAAI,CAAA,MAAM,EAAG,CAAA,KAAK,EAAE,CAAC;KACtB,CAAC,OAAO,GAAG,CAAE;CAAE,WAAO,CAAA,IAAI,CAAC,GAAG,CAAC,CAAA;KAAE;AAAA,CAAA,IAAC;CAEnC,SAAO,CAAA,CAAC,KAAK,CAAC,MAAM,YAAG,KAAK;AAC1B,CAAA,MAAC,KAAK,CAAC,QAAQ,YAAG,OAAO;cAAK,CAAA,OAAO,QAAQ,EAAE;SAAC,CAAC;CACjD,WAAO,EAAC,KAAK,CAAE,OAAM,CAAC,CAAC;OACtB,KAAI,CAAC,CAAC;KACT,CAAC;CACJ;AGnCG,CAAJ,EAAI,CAAA,UAAU,EHqCC,WGrCmB,AHqCT,CGrCS;ACAlC,CAAA,KAAM,QAAQ;CCAd,cAAwB;CAAE,qBAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CJsCnC","sourcesContent":["import { Q, _ } from 'azk/utils'\n\nvar StdOutFixture = require('fixture-stdout');\n\nvar fixtures = {\n  stdout: new StdOutFixture(),\n  stderr: new StdOutFixture({ stream: process.stderr }),\n}\n\nfunction capture_io(block) {\n  return Q.when(null, () => {\n    var writes = { stdout: '', stderr: '' };\n\n    // Capture a write to stdout\n    _.each(fixtures, (fixture, key) => {\n      fixture.capture((string, encoding, fd) => {\n        writes[key] += string;\n        return false;\n      });\n    });\n\n    var fail = (err) => {\n      _.each(fixtures, (fixture) => fixture.release());\n      throw err;\n    }\n\n    try {\n      var result = block();\n    } catch (err) { return fail(err) };\n\n    return Q.when(result, (value) => {\n      _.each(fixtures, (fixture) => fixture.release());\n      return [value, writes];\n    }, fail);\n  });\n}\n\nexport default capture_io;\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__default = $__placeholder__0","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}