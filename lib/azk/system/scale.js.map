{"version":3,"file":"scale.js","sources":["../../../src/system/scale.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","src/system/scale.js","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","sourcesContent":["module.exports = function() {\n            $__placeholder__0\n          }.call($__placeholder__1);","var __moduleName = $__placeholder__0;","require($__placeholder__0)","import { Q, async, _, dynamic } from 'azk';\nimport { SystemDependError, SystemNotScalable } from 'azk/utils/errors';\nimport { Balancer } from 'azk/system/balancer';\n\ndynamic(this, {\n  docker() {\n    return require('azk/docker').default;\n  }\n});\n\nvar Scale = {\n  start(system, options = {}) {\n    return this.scale(system, system.default_instances, options);\n  },\n\n  scale(system, instances = {}, options = {}) {\n    // Default instances\n    if (_.isObject(instances)) {\n      options   = _.merge(instances, options);\n      instances = system.default_instances;\n    }\n\n    // Protect not scalable systems\n    if (!system.scalable && instances > 1) {\n      return Q.reject(new SystemNotScalable(system));\n    }\n\n    // Default options\n    options = _.defaults(options, {\n      envs: {},\n      dependencies: true,\n    });\n\n    return async(this, function* (notify) {\n      var deps_envs = yield this.checkDependsAndReturnEnvs(system, options);\n      options.envs  = _.merge(deps_envs, options.envs || {});\n\n      var containers = yield this.instances(system);\n      var from = containers.length;\n      var icc  = instances - from;\n\n      if (icc != 0)\n        notify({ type: \"scale\", from, to: from + icc, system: system.name });\n\n      if (icc > 0) {\n        for(var i = 0; i < icc; i++) {\n          yield system.runDaemon(_.clone(options));\n          options.provision_force = false;\n        }\n      } else if (icc < 0) {\n        containers = containers.reverse().slice(0, Math.abs(icc));\n        yield system.stop(containers, options);\n      }\n\n      return icc;\n    });\n  },\n\n  killAll(system, options = {}) {\n    return async(this, function* () {\n      options = _.defaults(options, {\n        kill: true,\n      });\n\n      // Clear balancer\n      yield Balancer.clear(system);\n\n      var instances = yield this.instances(system);\n      return system.stop(instances, options.kill);\n    });\n  },\n\n  _dependencies_options(options) {\n    return {\n      dependencies: options.dependencies,\n      pull: options.pull,\n    };\n  },\n\n  checkDependsAndReturnEnvs(system, options, required = true) {\n    var depends = system.dependsInstances;\n    return async(this, function* () {\n      var instances, depend, envs = {};\n\n      for (var d = 0; d < depends.length; d++) {\n        depend    = depends[d];\n        instances = yield this.instances(depend);\n        if (_.isEmpty(instances) && required) {\n          // Run dependencies\n          if (options.dependencies) {\n            yield depend.start(this._dependencies_options(options));\n            instances = yield this.instances(depend);\n          } else {\n            throw new SystemDependError(system.name, depend.name);\n          }\n        }\n\n        if (!_.isEmpty(instances)) {\n          envs = _.merge(envs, yield this.getEnvs(depend, instances));\n        }\n      }\n\n      return envs;\n    });\n  },\n\n  getEnvs(system, instances = null) {\n    return async(this, function* () {\n      var ports = {}, envs = {};\n      if (instances.length > 0) {\n        var data = yield docker.getContainer(instances[0].Id).inspect();\n        _.each(data.NetworkSettings.Access, (port) => {\n          ports[port.name] = port.port;\n        });\n        envs = system.expandExportEnvs({\n          envs: this._parseEnvs(data.Config.Env),\n          net: { port: ports }\n        });\n      }\n      return envs;\n    });\n  },\n\n  _parseEnvs(collection) {\n    return _.reduce(collection, (envs, env) => {\n      if (env.match(/\\=/)) {\n        env = env.split(\"=\");\n        envs[env[0]] = env[1];\n      }\n      return envs;\n    }, {});\n  },\n\n  instances(system, options = {}) {\n    return system.instances(_.defaults(options, {\n      type: \"daemon\",\n    }));\n  },\n}\n\nexport { Scale };\n","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.maybeThrow()","$ctx.returnValue = $__placeholder__0","return $ctx.end()","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","typeof global !== 'undefined' ? global : this"]}