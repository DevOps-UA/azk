{"version":3,"file":"scale.js","sources":["../../../src/system/scale.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { async, _ } from 'azk';\nimport { SystemDependError } from 'azk/utils/errors';\nimport docker from 'azk/docker';\n\nvar Scale = {\n  scale(system, instances, options = {}) {\n    // Default options\n    options = _.defaults(options, {\n    });\n\n    return async(this, function* (notify) {\n      yield this.checkDepends(system);\n      var containers = yield this.instances(system);\n\n      var from = containers.length;\n      var icc  = instances - from;\n\n      if (icc != 0)\n        notify({ type: \"scale\", from, to: from + icc, system: this.name });\n\n      if (icc > 0) {\n        for(var i = 0; i < icc; i++) {\n          yield system.runDaemon();\n        }\n      } else if (icc < 0) {\n        containers = containers.reverse().slice(0, Math.abs(icc));\n        yield this._kill_or_stop(containers);\n      }\n\n      return true;\n    });\n  },\n\n  killAll(system, options = {}) {\n    options = _.defaults(options, {\n      kill: true,\n    });\n\n    return this.instances(system).then((instances) => {\n      return system.stop(instances, options.kill);\n    });\n  },\n\n  checkDepends(system) {\n    var depends = system.dependsInstances;\n    return async(this, function* () {\n      var instances, depend;\n      for (var d = 0; d < depends.length; d++) {\n        depend    = depends[d];\n        instances = yield this.instances(depend);\n        if (_.isEmpty(instances)) {\n          throw new SystemDependError(system.name, depend.name);\n        }\n      }\n      return true;\n    });\n  },\n\n  instances(system, options = {}) {\n    // Default options\n    options = _.defaults(options, {\n      include_dead: false,\n      include_exec: false,\n    })\n\n    // Include dead containers\n    var query_options = {};\n    if (options.include_dead) query_options.all = true ;\n\n    return docker.azkListContainers(query_options).then((containers) => {\n      return _.filter(containers, (container) => {\n        var azk = container.Annotations.azk;\n        return azk.mid == system.manifest.namespace && azk.sys == system.name;\n      });\n    });\n  },\n}\n\nexport { Scale };\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.maybeThrow()","$ctx.sent","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.returnValue = $__placeholder__0","return $ctx.end()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}