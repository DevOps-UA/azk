{"version":3,"file":"index.js","sources":["../../../src/system/index.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, t, config, path, async, Q } from 'azk';\nimport { Image } from 'azk/images';\nimport { net } from 'azk/utils';\nimport { XRegExp } from 'xregexp';\n\nimport { Run } from 'azk/system/run';\n\nvar regex_port = new XRegExp(\n  \"(?<private>[0-9]{1,})(:(?<public>[0-9]{1,})){0,1}(/(?<protocol>tcp|udp)){0,1}\", \"x\"\n);\n\nexport class System {\n  constructor(manifest, name, image, options = {}) {\n    this.manifest  = manifest;\n    this.name      = name;\n    this.image     = new Image(image);\n    this.__options = options;\n    this.options   = _.merge({}, this.default_options, options);\n    this.options   = this._expand_template(this.options);\n  }\n\n  get default_options() {\n    var msg = t(\"system.cmd_not_set\", {system: this.name});\n    return {\n      command  : `echo \"${msg}\"; exit 1`,\n      shell    : \"/bin/sh\",\n      depends  : [],\n      workdir  : \"/\",\n      envs     : {},\n      scalable : false,\n    }\n  }\n\n  // System operations\n  runShell(command, options = { }) {\n    return Run.run(this, command, this.shellOptions(options));\n  }\n\n  // Get options\n  get command()           { return this.options.command };\n  get workdir()           { return this.options.workdir };\n  get shell()             { return this.options.shell };\n  get raw_mount_folders() { return this.options.mount_folders };\n  get scalable()          { return this.options.scalable };\n  get namespace() {\n    return this.manifest.namespace + '-sys.' + this.name;\n  }\n\n  // Ports\n  get ports() {\n    var ports = this.options.ports || {};\n\n    // Add http port\n    if (_.isEmpty(ports.http) && this.options.http) {\n      ports.http = \"5000/tcp\";\n    }\n\n    return ports;\n  }\n\n  // Envs\n  get envs() { return this.options.envs; }\n\n  // Volumes options\n  get volumes() {\n    var volumes = { };\n\n    // Volumes\n    _.each(this.raw_mount_folders, (target, point) => {\n      point = path.resolve(this.manifest.manifestPath, point);\n      volumes[point] = target;\n    });\n\n    return volumes;\n  }\n\n  get persistent_volumes() {\n    var folders = {};\n    var key  = config('agent:requires_vm') ? 'agent:vm' : 'paths';\n    var base = config(key + ':persistent_folders');\n\n    return _.reduce(this.options.persistent_folders, (folders, folder) => {\n      var origin = path.join(base, this.manifest.namespace, this.name, folder);\n      folders[origin] = folder;\n      return folders;\n    }, {});\n  }\n\n  // Get depends info\n  get depends() { return this.options.depends };\n  get dependsInstances() {\n    return _.map(this.depends, (depend) => {\n      return this.manifest.system(depend, true);\n    });\n  };\n\n  // Check and pull image\n  checkImage(pull = true) {\n    return async(this, function* () {\n      if (pull) {\n        var promise = this.image.pull();\n      } else {\n        var promise = this.image.check().then((image) => {\n          if (image == null) {\n            throw new ImageNotAvailable(this.name, this.image.name);\n          }\n          return image;\n        });\n      }\n\n      var image = yield promise.progress((event) => {\n        event.system = this;\n        return event;\n      });\n\n      return image.inspect();\n    });\n  }\n\n  // Docker run options generator\n  daemonOptions(options = {}) {\n    options.ports = _.merge({}, this.ports, options.ports);\n    return this._make_options(true, options);\n  }\n\n  shellOptions(options = {}) {\n    options = _.defaults(options, {\n      interactive: false,\n    });\n\n    var opts = this._make_options(false, options);\n\n    // Shell extra options\n    opts.annotations.azk.shell = options.interactive ? 'interactive' : 'script';\n    _.merge(opts, {\n      tty   : options.interactive ? options.stdout.isTTY : false,\n      stdout: options.stdout,\n      stderr: options.stderr || options.stdout,\n      stdin : options.interactive ? (options.stdin) : null,\n    });\n\n    return opts;\n  }\n\n  // Private methods\n  _make_options(daemon, options = {}) {\n    // Default values\n    options = _.defaults(options, {\n      workdir: this.options.workdir,\n      volumes: {},\n      local_volumes: {},\n      envs: {},\n      ports: {},\n      sequencies: {},\n    });\n\n    // Map ports to docker configs: ports and envs\n    var envs  = _.merge({}, this.envs, options.envs);\n    var ports = {};\n    _.each(this._parse_ports(options.ports), (data, name) => {\n      if (!name.match(/\\//)) {\n        var env_key = `${name.toUpperCase()}_PORT`;\n        if (!envs[env_key]) envs[env_key] = data.private;\n      }\n      ports[data.name] = [data.config];\n    });\n\n    var type = daemon ? \"daemon\" : \"shell\";\n    return {\n      daemon: daemon,\n      ports: ports,\n      volumes: _.merge({}, this.volumes, options.volumes),\n      local_volumes: _.merge({}, this.persistent_volumes, options.local_volumes),\n      working_dir: options.workdir || this.workdir,\n      env: envs,\n      dns: net.nameServers(),\n      annotations: { azk: {\n        type : type,\n        sys  : this.name,\n        seq  : (options.sequencies[type] || 0) + 1,\n      }}\n    };\n  }\n\n  // Parse azk ports configs\n  _parse_ports(ports) {\n    return _.reduce(ports, (ports, port, name) => {\n      port = XRegExp.exec(port, regex_port);\n      port.protocol = port.protocol || \"tcp\";\n\n      // TODO: Add support a bind ip\n      var conf = { HostIp: config(\"agent:dns:ip\") };\n      if (port.public)\n        conf.HostPort = port.public;\n\n      ports[name] = {\n        config : conf,\n        name   : port.private + \"/\" + port.protocol,\n        private: port.private\n      };\n      return ports;\n    }, {});\n  }\n\n  _expand_template(options) {\n    var data = {\n      system: {\n        name: this.name,\n        persistent_folders: \"/data\",\n      },\n      manifest: {\n        dir: this.manifest.manifestDirName,\n        project_name: this.manifest.manifestDirName,\n      },\n      azk: {\n        default_domain: config('agent:balancer:host'),\n        balancer_port: config('agent:balancer:port'),\n        balancer_ip: config('agent:balancer:ip'),\n      }\n    };\n    return JSON.parse(_.template(JSON.stringify(options), data));\n  }\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","$ctx.returnValue = $__placeholder__0","return $ctx.end()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}