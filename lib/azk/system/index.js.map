{"version":3,"file":"index.js","sources":["../../../src/system/index.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, t, config, path, async, Q } from 'azk';\nimport { Image } from 'azk/images';\nimport { net } from 'azk/utils';\nimport { XRegExp } from 'xregexp';\n\nimport { Run } from 'azk/system/run';\nimport { Scale } from 'azk/system/scale';\n\nvar regex_port = new XRegExp(\n  \"(?<private>[0-9]{1,})(:(?<public>[0-9]{1,})){0,1}(/(?<protocol>tcp|udp)){0,1}\", \"x\"\n);\n\nexport class System {\n  constructor(manifest, name, image, options = {}) {\n    this.manifest  = manifest;\n    this.name      = name;\n    this.image     = new Image(image);\n    this.__options = options;\n    this.options   = _.merge({}, this.default_options, options);\n    this.options   = this._expand_template(this.options);\n  }\n\n  get default_options() {\n    return {\n      shell    : \"/bin/sh\",\n      depends  : [],\n      envs     : {},\n      scalable : false,\n    }\n  }\n\n  // System run operations\n  runShell(...args) { return Run.runShell(this, ...args); }\n  runDaemon(...args) { return Run.runDaemon(this, ...args); }\n  runProvision(...args) { return Run.runProvision(this, ...args); }\n  stop(...args) { return Run.stop(this, ...args); }\n\n  // Scale operations\n  start(...args) { return Scale.start(this, ...args); }\n  scale(...args) { return Scale.scale(this, ...args); }\n  instances(...args) { return Scale.instances(this, ...args); }\n  killAll(...args) { return Scale.killAll(this, ...args); }\n\n  // Save provision info\n  get provision_steps() {\n    var steps = this.options.provision || [];\n    if (!_.isArray(steps)) steps = [];\n    return steps;\n  }\n\n  get provisioned() {\n    var key  = this.name + \":provisioned\";\n    var date = this.manifest.getMeta(key);\n    return date ? new Date(date) : null;\n  }\n\n  set provisioned(value) {\n    var key  = this.name + \":provisioned\";\n    return this.manifest.setMeta(key, value);\n  }\n\n  // Options with default\n  get raw_command() { return this.options.command; }\n  get command() {\n    var command = this.options.command;\n    if (_.isEmpty(command)) {\n      var msg = t(\"system.cmd_not_set\", {system: this.name});\n      command = [this.shell, \"-c\", `echo \"${msg}\"; exit 1`];\n    } else {\n      command = [this.shell, \"-c\", command];\n    }\n\n    return command;\n  }\n\n  get workdir() {\n    return this.options.workdir || \"/\";\n  }\n\n  // Get options\n  get shell()             { return this.options.shell };\n  get raw_mount_folders() { return this.options.mount_folders };\n  get namespace() {\n    return this.manifest.namespace + '-sys.' + this.name;\n  }\n\n  // Scale options\n  get default_instances() {\n    return (this.options.scalable || {}).default || 1;\n  }\n  get scalable() {\n    return this.options.scalable ? true : false;\n  };\n\n  // Ports and host\n  get hostname() {\n    return (this.options.http || {}).hostname || config('agent:balancer:host');\n  }\n  get ports() {\n    var ports = this.options.ports || {};\n\n    // Add http port\n    if (_.isEmpty(ports.http) && this.options.http) {\n      ports.http = \"5000/tcp\";\n    }\n\n    return ports;\n  }\n\n  // Envs\n  get envs() { return this.options.envs; }\n  expandExportEnvs(data) {\n    var ports, envs = {};\n\n    // Defaults options\n    data = _.defaults(data, { envs: {}, net: {}, });\n    data.net = _.defaults(data.net, { host: this.hostname, port: {}, });\n\n    // ports from instances\n    _.each(data.net.port, (port_public, port_private) => {\n      var key_port = (`${this.name}_${port_private}_PORT`).toUpperCase();\n      var key_host = (`${this.name}_${port_private}_HOST`).toUpperCase();\n      envs[key_port] = port_public;\n      envs[key_host] = data.net.host;\n    });\n\n    // ports from system ports options\n    ports = this._parse_ports(this.ports);\n    _.each(ports, (config, name) => {\n      var port     = data.net.port[config.private];\n      var key_port = (`${this.name}_${name}_PORT`).toUpperCase();\n      var key_host = (`${this.name}_${name}_HOST`).toUpperCase();\n      data.net.port[name] = port;\n      if (port && _.isEmpty(data.envs[key_port])) {\n        envs[key_port] = port;\n      }\n      if (_.isEmpty(data.envs[key_host])) {\n        envs[key_host] = data.net.host;\n      }\n    });\n\n    // http ports\n    var key = this.env_key('URL');\n    if (ports.http && _.isEmpty(envs[key])) {\n      envs[key] = `http://${data.net.host}`;\n    }\n\n    envs = _.reduce(this.options.export_envs || {}, (envs, value, key) => {\n      envs[key.toUpperCase()] = value;\n      return envs;\n    }, envs);\n\n    return JSON.parse(_.template(JSON.stringify(envs), data));\n  }\n\n  env_key(...args) {\n    return (`${this.name}_${[...args].join(\"_\")}`).toUpperCase();\n  }\n\n  // Volumes options\n  get volumes() {\n    var volumes = { };\n\n    // Volumes\n    _.each(this.raw_mount_folders, (target, point) => {\n      point = path.resolve(this.manifest.manifestPath, point);\n      volumes[point] = target;\n    });\n\n    return volumes;\n  }\n\n  get persistent_volumes() {\n    var folders = {};\n    var key  = config('agent:requires_vm') ? 'agent:vm' : 'paths';\n    var base = config(key + ':persistent_folders');\n\n    return _.reduce(this.options.persistent_folders, (folders, folder) => {\n      var origin = path.join(base, this.manifest.namespace, this.name, folder);\n      folders[origin] = folder;\n      return folders;\n    }, {});\n  }\n\n  // Get depends info\n  get depends() { return this.options.depends };\n  get dependsInstances() {\n    return _.map(this.depends, (depend) => {\n      return this.manifest.system(depend, true);\n    });\n  };\n\n  // Docker run options generator\n  daemonOptions(options = {}) {\n    // Load configs from image\n    if (options.image_data) {\n      var config = options.image_data.Config;\n\n      // Cmd\n      if(_.isEmpty(this.options.command) && _.isEmpty(options.command)) {\n        options.command = config.Cmd;\n      }\n\n      // WorkingDir\n      if(_.isEmpty(this.options.workdir) && _.isEmpty(options.workdir)) {\n        options.workdir = config.WorkingDir;\n      }\n\n      // ExposedPorts\n      if(_.isEmpty(this.options.ports) && _.isEmpty(options.ports)) {\n        options.ports = _.reduce(config.ExposedPorts, (ports, config, port) => {\n          ports[port] = port;\n          return ports;\n        }, {});\n      }\n    }\n\n    options.ports = _.merge({}, this.ports, options.ports);\n    return this._make_options(true, options);\n  }\n\n  shellOptions(options = {}) {\n    options = _.defaults(options, {\n      interactive: false,\n    });\n\n    var opts = this._make_options(false, options);\n\n    // Shell extra options\n    opts.annotations.azk.shell = options.interactive ? 'interactive' : 'script';\n    _.merge(opts, {\n      tty   : options.interactive ? options.stdout.isTTY : false,\n      stdout: options.stdout,\n      stderr: options.stderr || options.stdout,\n      stdin : options.interactive ? (options.stdin) : null,\n    });\n\n    return opts;\n  }\n\n  // Private methods\n  _make_options(daemon, options = {}) {\n    // Default values\n    options = _.defaults(options, {\n      workdir: this.options.workdir,\n      volumes: {},\n      local_volumes: {},\n      envs: {},\n      ports: {},\n      sequencies: {},\n    });\n\n    // Map ports to docker configs: ports and envs\n    var envs  = _.merge({}, this.envs, options.envs);\n    var ports = {};\n    _.each(this._parse_ports(options.ports), (data, name) => {\n      if (!name.match(/\\//)) {\n        var env_key = `${name.toUpperCase()}_PORT`;\n        if (!envs[env_key]) envs[env_key] = data.private;\n      }\n      ports[data.name] = [data.config];\n    });\n\n    var type = daemon ? \"daemon\" : \"shell\";\n    return {\n      daemon: daemon,\n      ports: ports,\n      command: options.command || this.command,\n      volumes: _.merge({}, this.volumes, options.volumes),\n      local_volumes: _.merge({}, this.persistent_volumes, options.local_volumes),\n      working_dir: options.workdir || this.workdir,\n      env: envs,\n      dns: net.nameServers(),\n      annotations: { azk: {\n        type : type,\n        mid  : this.manifest.namespace,\n        sys  : this.name,\n        seq  : (options.sequencies[type] || 0) + 1,\n      }}\n    };\n  }\n\n  // Parse azk ports configs\n  _parse_ports(ports) {\n    return _.reduce(ports, (ports, port, name) => {\n      port = XRegExp.exec(port, regex_port);\n      port.protocol = port.protocol || \"tcp\";\n\n      // TODO: Add support a bind ip\n      var conf = { HostIp: config(\"agent:dns:ip\") };\n      if (port.public)\n        conf.HostPort = port.public;\n\n      ports[name] = {\n        config : conf,\n        name   : port.private + \"/\" + port.protocol,\n        private: port.private\n      };\n      return ports;\n    }, {});\n  }\n\n  _expand_template(options) {\n    var data = {\n      _keep_key(key) {\n        return \"<%= \" + key + \" %>\";\n      },\n      system: {\n        name: this.name,\n        persistent_folders: \"/data\",\n      },\n      manifest: {\n        dir: this.manifest.manifestDirName,\n        project_name: this.manifest.manifestDirName,\n      },\n      azk: {\n        default_domain: config('agent:balancer:host'),\n        balancer_port: config('agent:balancer:port'),\n        balancer_ip: config('agent:balancer:ip'),\n      }\n    };\n\n    var template = this._replace_keep_keys(JSON.stringify(options));\n    return JSON.parse(_.template(template, data));\n  }\n\n  _replace_keep_keys(template) {\n    var regex = /<%=?\\s*((envs|net)\\.[\\S]+?)\\s*%>/g;\n    return template.replace(regex, \"<%= _keep_key('$1') %>\");\n  }\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.spread($__placeholder__0)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}