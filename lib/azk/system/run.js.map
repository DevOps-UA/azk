{"version":3,"file":"run.js","sources":["../../../src/system/run.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,CAAA,YAAY,mBAAoB,CAAC;UCArC,CAAA,OAAO,CFAyB,KAAK,CEAX;;;;GFCnB,OAAM,EEDb,CAAA,OAAO,CFCY,YAAY,CEDL;UAA1B,CAAA,OAAO,CFE2C,kBAAkB,CEF1C;;;GFGnB,IAAG,EEHV,CAAA,OAAO,CFGS,eAAe,CEHL;AFKtB,CAAJ,EAAI,CAAA,GAAG,EAAG;CACR,SAAQ,CAAR,UAAS,MAAM,CAAE,CAAA,OAAO,AAAc;OAAZ,QAAO,6CAAG,GAAE;CACpC,SAAO,CAAA,IAAI,WAAW,CAAC,MAAM,CAAE,QAAO,CAAC,KAAK,WAAE,KAAK,CAAK;AACtD,CAAA,YAAO,EAAG,CAAA,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;CACvC,WAAO,CAAA,MAAM,IAAI,CAAC,MAAM,MAAM,KAAK,CAAE,QAAO,CAAE,QAAO,CAAC,CAAC;KACxD,EAAC,CAAC;GACJ;CAED,UAAS,CAAT,UAAU,MAAM,AAAc;OAAZ,QAAO,6CAAG,GAAE;CAC5B,SAAO,CAAA,KAAK,CAAC,IAAI,WAAa,MAAM;;;;;;;;;;;;;CGdxC,WAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;;CCDjB,mBNiBwB,CAAA,IAAI,WAAW,CAAC,MAAM,CAAE,QAAO,CAAC,CMjBhC;;qBCAxB,CAAA,IAAI,KAAK;;;;APkBH,CAAA,oBAAO,WAAW,EAAG,MAAK,CAAC;0BAEV,CAAA,MAAM,cAAc,CAAC,OAAO,CAAC;uBAC7B,CAAA,UAAU,QAAQ;;;;;CMrBzC,mBNsB6B,CAAA,MAAM,IAAI,CAAC,MAAM,MAAM,KAAK,CAAE,QAAO,CAAE,WAAU,CAAC,CMtBvD;;yBCAxB,CAAA,IAAI,KAAK;;;;;CDAT,mBNwBuB,CAAA,SAAS,QAAQ,EAAE,CMxBlB;;oBCAxB,CAAA,IAAI,KAAK;;;;yBPyBa,CAAA,CAAC,KAAK,CAAC,IAAI,gBAAgB,OAAO,CAAC;;;;AQzBzD,CAAA,iBAAI,MAAM,EAAG,CAAA,CR2BH,SAAS,CQ3Ba,UAAwC,CAAC;CACjE,mBAAK;;CR2BL,iBAAI,MAAM,CAAC,mBAAmB,CAAC,CAAE;sBACpB,CAAA,MAAM,CAAC,aAAa,CAAC;eACjC,KAAM;sBACM,CAAA,IAAI,QAAQ;eACxB;CAAA,oBAGa,CAAA,OAAO,QAAQ,GAAI,CAAA,MAAM,CAAC,kBAAkB,CAAC;uBAC7C,CAAA,OAAO,MAAM,GAAM,CAAA,MAAM,CAAC,oBAAoB,CAAC;yBAC7C;AACd,CAAA,sBAAO,CAAE,QAAO;AAChB,CAAA,uBAAQ;CACN,uBAAO,CAAA,SAAS,QAAQ,EAAE,KAAK,WAAE,IAAI,CAAK;CACxC,yBAAO,CAAA,IAAI,MAAM,QAAQ,CAAC;mBAC3B,EAAC,CAAC;kBACJ;eACF;;;;;CM5CT,mBN6C4B,CAAA,GAAG,YAAY,CAAC,IAAI,CAAE,CAAA,SAAS,KAAK,CAAE,MAAK,CAAE,UAAS,CAAC,CM7C3D;;uBCAxB,CAAA,IAAI,KAAK;;;;ACAT,CAAA,iBAAI,MAAM,EAAG,CAAA,CR+CD,CAAC,OAAO,CQ/CY,UAAwC,CAAC;CACjE,mBAAK;;;CFDb,mBNgDuB,CAAA,SAAS,QAAQ,EAAE,CMhDlB;;ANgDd,CAAA,iBAAI,EOhDd,CAAA,IAAI,KAAK,APgDiC,CAAA;;;;;CMhD1C,mBNiD0B,CAAA,SAAS,KAAK,CAAC;AAAC,CAAA,qBAAM,CAAE,KAAI;AAAE,CAAA,qBAAM,CAAE,KAAI;CAAA,cAAC,CAAC,CMjD9C;;mBCAxB,CAAA,IAAI,KAAK;;;;CPkDC,kBAAM,IAAI,eAAc,CACtB,MAAM,KAAK,CACX,UAAS,CACT,CAAA,IAAI,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CACzB,CAAA,IAAI,MAAM,SAAS,CACnB,IAAG,CACJ,CAAC;;;;ASxDZ,CAAA,iBAAI,YAAY,ET4DH,US5DuB,AT4Dd,CS5Dc;;;;CCApC,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MH2DZ,CAAC;GACJ;CAED,KAAI,CAAJ,UAAK,MAAM,CAAE,CAAA,SAAS,AAAc;OAAZ,KAAI,6CAAG,MAAK;CAClC,SAAO,CAAA,KAAK,UAAY,MAAM;;CGjElC,WAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;yBLiEK,KAAI;;;;AQlE1B,CAAA,iBAAI,MAAM,EAAG,CAAA,CRmEA,SAAS,EAAG,CAAA,SAAS,IAAI,EAAE,CQnER,UAAwC,CAAC;CACjE,mBAAK;;ARmEL,CAAA,sBAAS,EAAG,CAAA,MAAM,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC;;;;AQpEtD,CAAA,iBAAI,MAAM,EAAG,CAAA,CRqED,IAAI,CQrEgB,SAAwC,CAAC;CACjE,mBAAK;;ARqEH,CAAA,mBAAM,CAAC;AAAE,CAAA,mBAAI,CAAE,eAAc;AAAE,CAAA,qBAAM,CAAE,CAAA,MAAM,KAAK;CAAA,cAAE,CAAC,CAAC;;;;;CMtEhE,mBNuEgB,CAAA,SAAS,KAAK,EAAE,CMvER;;AKAxB,CAAA,iBAAI,WAAW,EAAE,CAAA;;;;AXyEP,CAAA,mBAAM,CAAC;AAAE,CAAA,mBAAI,CAAE,eAAc;AAAE,CAAA,qBAAM,CAAE,CAAA,MAAM,KAAK;CAAA,cAAE,CAAC,CAAC;;;;;CMzEhE,mBN0EgB,CAAA,SAAS,KAAK,EAAE,CM1ER;;AKAxB,CAAA,iBAAI,WAAW,EAAE,CAAA;;;;AX4ET,CAAA,mBAAM,CAAC;AAAE,CAAA,mBAAI,CAAE,UAAS;AAAE,CAAA,iBAAE,CAAE,CAAA,SAAS,GAAG;CAAA,cAAE,CAAC,CAAC;;;;AS5EtD,CAAA,iBAAI,YAAY,ET6ED,CAAA,SAAS,OAAO,ES7EK,AT6EH,CS7EG;;;;CCApC,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MH6EZ,CAAC;GACJ;CAGD,WAAU,CAAV,UAAW,MAAM,CAAE,CAAA,OAAO;AACxB,CAAA,UAAO,EAAG,CAAA,CAAC,SAAS,CAAC,OAAO,CAAE,EAC5B,UAAU,CAAE,KAAI,CACjB,CAAC,CAAC;CAEH,SAAO,CAAA,KAAK,UAAY;;;CGxF5B,WAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;CLwFX,iBAAI,OAAO,WAAW,CAAE;yBACR,CAAA,MAAM,MAAM,KAAK,EAAE;eAClC,KAAM;yBACS,CAAA,MAAM,MAAM,MAAM,EAAE,KAAK,WAAE,KAAK,CAAK;CACjD,qBAAI,KAAK,GAAI,KAAI,CAAE;CACjB,wBAAM,IAAI,kBAAiB,CAAC,MAAM,KAAK,CAAE,CAAA,MAAM,MAAM,KAAK,CAAC,CAAC;mBAC7D;AACD,CADC,uBACM,MAAK,CAAC;iBACd,EAAC;eACH;CAAA;;;;CMlGP,mBNoGwB,CAAA,OAAO,SAAS,WAAE,KAAK,CAAK;AAC5C,CAAA,oBAAK,OAAO,EAAG,OAAM,CAAC;CACtB,qBAAO,MAAK,CAAC;eACd,EAAC,CMvGgB;;qBCAxB,CAAA,IAAI,KAAK;;;;AEAT,CAAA,iBAAI,YAAY,ETyGH,CAAA,KAAK,QAAQ,ESzGU,ATyGR,CSzGQ;;;;CCApC,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MHwGZ,CAAC;GACJ;CACF,CAAA;;AY5GD,CAAA,KAAM,QAAQ;CCAd,UAAwB;CAAE,cAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CZ+GnC","sourcesContent":["import { _, async, config} from 'azk';\nimport docker from 'azk/docker';\nimport { ImageNotAvailable, SystemRunError } from 'azk/utils/errors';\nimport net from 'azk/utils/net';\n\nvar Run = {\n  runShell(system, command, options = {}) {\n    return this.checkImage(system, options).then((image) => {\n      options = system.shellOptions(options);\n      return docker.run(system.image.name, command, options);\n    });\n  },\n\n  runDaemon(system, options = {}) {\n    return async(this, function* (notify) {\n      // TODO: add instances and dependencies options\n      // Prepare options\n      var image = yield this.checkImage(system, options);\n      options.image_data = image;\n\n      var docker_opt = system.daemonOptions(options);\n      var command    = docker_opt.command;\n      var container  = yield docker.run(system.image.name, command, docker_opt);\n\n      var data = yield container.inspect();\n      var port_data = _.find(data.NetworkSettings.Access);\n\n      if (port_data) {\n        if (config('agent:requires_vm')) {\n          var host = config('agent:vm:ip');\n        } else {\n          var host = port.gateway;\n        }\n\n        // Wait for available\n        var retry   = options.timeout || config('docker:run:retry');\n        var timeout = options.retry   || config('docker:run:timeout');\n        var wait_opts = {\n          timeout: timeout,\n          retry_if: () => {\n            return container.inspect().then((data) => {\n              return data.State.Running;\n            });\n          },\n        };\n        var running = yield net.waitService(host, port_data.port, retry, wait_opts);\n\n        if (!running) {\n          data = yield container.inspect();\n          var log = yield container.logs({stdout: true, stderr: true});\n          throw new SystemRunError(\n            system.name,\n            container,\n            data.Config.Cmd.join(' '),\n            data.State.ExitCode,\n            log\n          );\n        }\n      }\n\n      return container;\n    });\n  },\n\n  stop(system, instances, kill = false) {\n    return async(function* (notify) {\n      var container = null;\n      while (container = instances.pop()) {\n        container = docker.getContainer(container.Id);\n        if (kill) {\n          notify({ type: 'kill_service', system: system.name });\n          yield container.kill();\n        } else {\n          notify({ type: 'stop_service', system: system.name });\n          yield container.stop();\n        }\n        notify({ type: \"stopped\", id: container.Id });\n        return container.remove();\n      }\n    });\n  },\n\n  // Check and pull image\n  checkImage(system, options) {\n    options = _.defaults(options, {\n      image_pull: true,\n    });\n\n    return async(function* () {\n      if (options.image_pull) {\n        var promise = system.image.pull();\n      } else {\n        var promise = system.image.check().then((image) => {\n          if (image == null) {\n            throw new ImageNotAvailable(system.name, system.image.name);\n          }\n          return image;\n        });\n      }\n\n      var image = yield promise.progress((event) => {\n        event.system = system;\n        return event;\n      });\n\n      return image.inspect();\n    });\n  },\n}\n\nexport { Run }\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.returnValue = $__placeholder__0","return $ctx.end()","$ctx.maybeThrow()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}