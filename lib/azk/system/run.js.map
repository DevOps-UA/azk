{"version":3,"file":"run.js","sources":["../../../src/system/run.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, async, config} from 'azk';\nimport docker from 'azk/docker';\nimport { ImageNotAvailable, SystemRunError, RunCommandError } from 'azk/utils/errors';\nimport net from 'azk/utils/net';\n\nvar MemoryStream = require('memorystream');\n\nvar Run = {\n\n  runProvision(system, options = {}) {\n    options = _.defaults(options, {\n      provision_force: false,\n    });\n\n    return async(this, function* (notify) {\n      var steps = system.provision_steps;\n\n      if (_.isEmpty(steps)) return null;\n      if ((!options.provision_force) && system.provisioned) return null;\n\n      // provision command (require /bin/sh)\n      var cmd  = [\"/bin/sh\", \"-c\", \"( \" + steps.join('; ') + \" )\"];\n\n      // Capture outputs\n      var output = \"\";\n      options = _.clone(options);\n      options.stdout = new MemoryStream();\n      options.stdout.on('data', (data) => {\n        output += data.toString();\n      });\n\n      notify({ type: \"provision\", system: system.name });\n      var exitResult = yield system.runShell(cmd, options);\n      if (exitResult.code != 0) {\n        throw new RunCommandError(cmd.join(' '), output);\n      }\n      // save the date provisioning\n      this.provisioned = new Date();\n    });\n  },\n\n  runShell(system, command, options = {}) {\n    options = _.defaults(options, {\n      remove: false,\n    });\n\n    return async(this, function* () {\n      yield this._check_image(system, options);\n      var docker_opt = system.shellOptions(options);\n      var container  = yield docker.run(system.image.name, command, docker_opt);\n      var data       = yield container.inspect();\n\n      // Remove before run\n      if (options.remove) { yield container.remove(); }\n\n      return {\n        code: data.State.ExitCode,\n        containerId: container.Id,\n        removed: options.remove,\n      }\n    });\n  },\n\n  runDaemon(system, options = {}) {\n    return async(this, function* (notify) {\n      // TODO: add instances and dependencies options\n      // TODO: support to wait udp protocol\n      // Prepare options\n      var image = yield this._check_image(system, options);\n      options.image_data = image;\n\n      // Check provision\n      yield system.runProvision(options);\n\n      var docker_opt = system.daemonOptions(options);\n      var command    = docker_opt.command;\n      var container  = yield docker.run(system.image.name, command, docker_opt);\n\n      var data = yield container.inspect();\n      var port_data = _.find(data.NetworkSettings.Access, (port) => {\n        return port.protocol == 'tcp'\n      });\n\n      if (port_data) {\n        var retry   = options.timeout || config('docker:run:retry');\n        var timeout = options.retry   || config('docker:run:timeout');\n\n        yield this._wait_available(system, port_data, container, retry, timeout);\n      }\n\n      return container;\n    });\n  },\n\n  stop(system, instances, options = {}) {\n    options = _.defaults(options, {\n      kill: false,\n      remove: true,\n    });\n\n    return async(function* (notify) {\n      var container = null;\n\n      while (container = instances.pop()) {\n        container = docker.getContainer(container.Id);\n        if (options.kill) {\n          notify({ type: 'kill_service', system: system.name });\n          yield container.kill();\n        } else {\n          notify({ type: 'stop_service', system: system.name });\n          yield container.stop();\n        }\n        notify({ type: \"stopped\", id: container.Id });\n        if (options.remove)\n          yield container.remove();\n      }\n\n      return true;\n    });\n  },\n\n  // Wait for container/system available\n  _wait_available(system, port_data, container, retry, timeout) {\n    return async(this, function* () {\n      if (config('agent:requires_vm')) {\n        var host = config('agent:vm:ip');\n      } else {\n        var host = port_data.gateway;\n      }\n\n      // Wait for available\n      var wait_opts = {\n        timeout: timeout,\n        retry_if: () => {\n          return container.inspect().then((data) => {\n            //console.log(data);\n            return data.State.Running;\n          });\n        },\n      };\n\n      var running = yield net.waitService(host, port_data.port, retry, wait_opts);\n\n      if (!running) {\n        var data = yield container.inspect();\n        var log  = yield container.logs({stdout: true, stderr: true});\n        throw new SystemRunError(\n          system.name,\n          container,\n          data.Config.Cmd.join(' '),\n          data.State.ExitCode,\n          log\n        );\n      }\n\n      return true;\n    });\n  },\n\n  // Check and pull image\n  _check_image(system, options) {\n    options = _.defaults(options, {\n      image_pull: true,\n    });\n\n    return async(function* () {\n      if (options.image_pull) {\n        var promise = system.image.pull();\n      } else {\n        var promise = system.image.check().then((image) => {\n          if (image == null) {\n            throw new ImageNotAvailable(system.name, system.image.name);\n          }\n          return image;\n        });\n      }\n\n      var image = yield promise.progress((event) => {\n        event.system = system;\n        return event;\n      });\n\n      return image.inspect();\n    });\n  },\n}\n\nexport { Run }\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.returnValue = $__placeholder__0","return $__placeholder__0","$ctx.sent","return $ctx.end()","$ctx.maybeThrow()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}