{"version":3,"file":"run.js","sources":["../../../src/system/run.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","src/system/run.js","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"AAAA,MAAM,QAAQ,EAAG,CAAA,SAAS;;ACAtB,CAAJ,IAAI,CAAA,YAAY,mBAAoB,CAAC;YCArC,CAAA,OAAO,CCAgD,KAAK,CDAlC;;;;;;;;YAA1B,CAAA,OAAO,CCC4D,kBAAkB,CDD3D;;;;gBAA1B,CAAA,OAAO,CCEkB,qBAAqB,CDFpB;KCGnB,IAAG,EDHV,CAAA,OAAO,CCGS,eAAe,CDHL;ACK1B,CAAA,QAAO,CAAC,IAAI,CAAE;CACZ,eAAY,CAAZ,UAAa,CAAE;CACb,WAAO,CAAA,OAAO,CAAC,cAAc,CAAC,CAAC;KAChC;CAED,SAAM,CAAN,UAAO,CAAE;CACP,WAAO,CAAA,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC;KACtC;CAAA,EACF,CAAC,CAAC;AAEC,CAAJ,IAAI,CAAA,GAAG,EAAG;CACR,eAAY,CAAZ,UAAa,MAAM,AAAc;SAAZ,QAAO,6CAAG,GAAE;CAC/B,WAAO,CAAA,KAAK,CAAC,IAAI,WAAa,MAAM;;;;;CCjBxC,aAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;uBHiBC,CAAA,MAAM,gBAAgB;AAElC,CAAA,sBAAO,EAAG,CAAA,CAAC,SAAS,CAAC,OAAO,CAAE;AAC5B,CAAA,gCAAe,CAAE,MAAK;AACtB,CAAA,kCAAiB,CAAE,MAAK;CAAA,gBACzB,CAAC,CAAC;;;;AIvBT,CAAA,mBAAI,MAAM,EAAG,CAAA,CJyBH,CAAC,QAAQ,CAAC,KAAK,CAAC,CIzBM,QAAwC,CAAC;CACjE,qBAAK;;ACDb,CAAA,mBAAI,YAAY,ELyBmB,KKzBC,ALyBG,CKzBH;;;;ADApC,CAAA,mBAAI,MAAM,EAAG,CAAA,CJ0BH,CAAC,CAAC,OAAO,gBAAgB,CAAC,GAAI,CAAA,MAAM,YAAY,CI1B1B,QAAwC,CAAC;CACjE,qBAAK;;ACDb,CAAA,mBAAI,YAAY,EL0BmD,KK1B/B,AL0BmC,CK1BnC;;;;qBL6BnB,EAAC,SAAS,CAAE,KAAI,CAAE,CAAA,IAAI,EAAG,CAAA,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,CAAG,KAAI,CAAC;wBAG/C,GAAE;CACf,mBAAI,CAAC,OAAO,kBAAkB,CAAE;AAC9B,CAAA,wBAAO,EAAG,CAAA,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC3B,CAAA,wBAAO,WAAW,EAAG,YAAW,CAAC;AACjC,CAAA,wBAAO,OAAO,EAAG,IAAI,aAAY,EAAE,CAAC;AACpC,CAAA,wBAAO,OAAO,EAAG,CAAA,OAAO,OAAO,CAAC;AAChC,CAAA,wBAAO,OAAO,GAAG,CAAC,MAAM,YAAG,IAAI,CAAK;AAClC,CAAA,yBAAM,GAAI,CAAA,IAAI,SAAS,EAAE,CAAC;mBAC3B,EAAC,CAAC;iBACJ,KAAM;AACL,CAAA,uBAAM,EAAG,CAAA,CAAC,CAAC,eAAe,CAAC,CAAC;iBAC7B;AAED,CAFC,qBAEK,CAAC;AAAE,CAAA,qBAAI,CAAE,YAAW;AAAE,CAAA,uBAAM,CAAE,CAAA,MAAM,KAAK;CAAA,gBAAE,CAAC,CAAC;;;;;CM7CzD,qBN8C6B,CAAA,MAAM,SAAS,CAAC,GAAG,CAAE,QAAO,CAAC,CM9ClC;;4BCAxB,CAAA,IAAI,KAAK;;;;CP+CH,mBAAI,UAAU,KAAK,GAAI,EAAC,CAAE;CACxB,sBAAM,IAAI,gBAAe,CAAC,MAAM,KAAK,CAAE,CAAA,GAAG,KAAK,CAAC,GAAG,CAAC,CAAE,OAAM,CAAC,CAAC;iBAC/D;AAED,CAFC,qBAEK,YAAY,EAAG,IAAI,KAAI,EAAE,CAAC;;;;CQnDtC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QDkDZ,CAAC;KACJ;CAED,WAAQ,CAAR,UAAS,MAAM,CAAE,CAAA,OAAO,AAAc;SAAZ,QAAO,6CAAG,GAAE;CACpC,WAAO,CAAA,KAAK,CAAC,IAAI,WAAa;;;;;;;;;;;CCxDlC,aAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;sBHwDD,CAAA,CAAC,SAAS;sBAEA,CAAA,IAAI,eAAe;sBAAnB,UAAmB,CAAnB,IAAI,CAAgB,OAAM,CAAC;;;;;CM3DrD,2BAAwB;;sBCAxB,CAAA,IAAI,KAAK;;;;sBPyD2B;AAC5B,CAAA,uBAAM,CAAE,MAAK;AACb,CAAA,2BAAU,MAAmC;iBAC9C;sBAHS,UAAU,CAAV,CAAC,CAAU,QAAO,OAG1B;CAHF,sBAAO;;;;;CMzDb,qBN+D4B,CAAA,MAAM,0BAA0B,CAAC,OAAO,CAAE,MAAK,CAAC,CM/DpD;;2BCAxB,CAAA,IAAI,KAAK;;;;APgEH,CAAA,sBAAO,KAAK,EAAI,CAAA,CAAC,MAAM,CAAC,SAAS,CAAE,CAAA,OAAO,KAAK,GAAI,GAAE,CAAC,CAAC;;;;;CMhE7D,qBNkEY,CAAA,IAAI,aAAa,CAAC,MAAM,CAAE,QAAO,CAAC,CMlEtB;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;4BTmEM,CAAA,MAAM,aAAa,CAAC,OAAO,CAAC;;;;;CMnEnD,qBNqE6B,CAAA,MAAM,IAAI,CAAC,MAAM,MAAM,KAAK,CAAE,QAAO,CAAE,WAAU,CAAC,CMrEvD;;2BCAxB,CAAA,IAAI,KAAK;;;;;CDAT,qBNsE6B,CAAA,SAAS,QAAQ,EAAE,CMtExB;;sBCAxB,CAAA,IAAI,KAAK;;;;AHAT,CAAA,mBAAI,MAAM,EAAG,CAAA,CJyEH,OAAO,OAAO,CIzEQ,UAAwC,CAAC;CACjE,qBAAK;;;CEDb,qBNyEkC,CAAA,SAAS,OAAO,EAAE,CMzE5B;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;AJAjB,CAAA,mBAAI,YAAY,EL2EH;AACL,CAAA,qBAAI,CAAE,CAAA,IAAI,MAAM,SAAS;AACzB,CAAA,0BAAS,CAAE,UAAS;AACpB,CAAA,4BAAW,CAAE,CAAA,SAAS,GAAG;AACzB,CAAA,wBAAO,CAAE,CAAA,OAAO,OAAO;CAAA,gBK/EK,ALgF7B,CKhF6B;;;;CGApC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QD+EZ,CAAC;KACJ;CAED,YAAS,CAAT,UAAU,MAAM,AAAc;SAAZ,QAAO,6CAAG,GAAE;CAC5B,WAAO,CAAA,KAAK,CAAC,IAAI,WAAa,MAAM;;;;;;;;;;;;;;;;CCrFxC,aAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;;CGDjB,qBNwFwB,CAAA,IAAI,aAAa,CAAC,MAAM,CAAE,QAAO,CAAC,CMxFlC;;uBCAxB,CAAA,IAAI,KAAK;;;;APyFH,CAAA,sBAAO,WAAW,EAAG,MAAK,CAAC;;;;;CMzFjC,qBN4FY,CAAA,MAAM,aAAa,CAAC,OAAO,CAAC,CM5FhB;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;sBT8FD,CAAA,CAAC,SAAS;sBACA,CAAA,IAAI,eAAe;uBAAnB,UAAmB,CAAnB,IAAI,CAAgB,OAAM,CAAC;;;;;CM/FrD,4BAAwB;;uBCAxB,CAAA,IAAI,KAAK;;;;uBPgGK,CAAA,MAAM,WAAW;uBAFK;AAC5B,CAAA,2BAAU,OAAmC;AAC7C,CAAA,qBAAI,OAAmB;iBACxB;uBAHS,UAAU,CAAV,CAAC,CAAU,QAAO,QAG1B;CAHF,sBAAO;;;;4BAKU,CAAA,MAAM,cAAc,CAAC,OAAO,CAAC;yBAC7B,CAAA,UAAU,QAAQ;;;;;CMpGzC,qBNqG6B,CAAA,MAAM,IAAI,CAAC,MAAM,MAAM,KAAK,CAAE,QAAO,CAAE,WAAU,CAAC,CMrGvD;;2BCAxB,CAAA,IAAI,KAAK;;;;AHAT,CAAA,mBAAI,MAAM,EAAG,CAAA,CJuGH,OAAO,KAAK,CIvGU,UAAwC,CAAC;CACjE,qBAAK;;;CEDb,qBNyGyB,CAAA,SAAS,QAAQ,EAAE,CMzGpB;;sBCAxB,CAAA,IAAI,KAAK;;;;2BP0Ge,CAAA,CAAC,MAAM,CAAC,IAAI,gBAAgB,OAAO,CAAC,OAC3C,WAAE,IAAI,CAAK;CAChB,uBAAO,CAAA,IAAI,SAAS,GAAI,MAAK,CAAA;iBAC9B,EAAC,KACG,EAAE,MACD,EAAE;;;;AI/GlB,CAAA,mBAAI,MAAM,EAAG,CAAA,CJiHD,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CIjHD,UAAwC,CAAC;CACjE,qBAAK;;uBJiHW,CAAA,OAAO,QAAQ,GAAI,CAAA,MAAM,CAAC,kBAAkB,CAAC;yBAC7C,CAAA,OAAO,MAAM,GAAM,CAAA,MAAM,CAAC,oBAAoB,CAAC;;;;;CMnHvE,qBNqHgB,CAAA,IAAI,gBAAgB,CAAC,MAAM,CAAE,UAAS,CAAE,UAAS,CAAE,MAAK,CAAE,QAAO,CAAC,CMrH1D;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;;CHAjB,qBN0HY,CAAA,QAAQ,IAAI,CAAC,MAAM,CAAE,UAAS,CAAC,CM1HnB;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;AJAjB,CAAA,mBAAI,YAAY,EL4HH,UK5HuB,AL4Hd,CK5Hc;;;;CGApC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QD2HZ,CAAC;KACJ;CAED,OAAI,CAAJ,UAAK,MAAM,CAAE,CAAA,SAAS,AAAc;SAAZ,QAAO,6CAAG,GAAE;AAClC,CAAA,YAAO,EAAG,CAAA,CAAC,SAAS,CAAC,OAAO,CAAE;AAC5B,CAAA,WAAI,CAAE,MAAK;AACX,CAAA,aAAM,CAAE,KAAI;CAAA,MACb,CAAC,CAAC;CAEH,WAAO,CAAA,KAAK,UAAY,MAAM;;CCtIlC,aAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;2BHsIK,KAAI;;;;AIvI1B,CAAA,mBAAI,MAAM,EAAG,CAAA,CJ0IH,CAAC,QAAQ,CAAC,SAAS,CAAC,CI1IE,QAAwC,CAAC;CACjE,qBAAK;;;CEDb,qBN2I0B,CAAA,MAAM,UAAU,EAAE,CM3IpB;;AN2IhB,CAAA,wBAAS,EO3IjB,CAAA,IAAI,KAAK,AP2ImC,CAAA;;;;AI3I5C,CAAA,mBAAI,MAAM,EAAG,CAAA,CJ8IA,SAAS,EAAG,CAAA,SAAS,IAAI,EAAE,CI9IR,UAAwC,CAAC;CACjE,qBAAK;;AJ8IL,CAAA,wBAAS,EAAG,CAAA,MAAM,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC;;;;;CM/ItD,qBNkJc,CAAA,QAAQ,OAAO,CAAC,MAAM,CAAE,UAAS,CAAC,CMlJxB;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;ALAjB,CAAA,mBAAI,MAAM,EAAG,CAAA,CJoJD,OAAO,KAAK,CIpJQ,UAAwC,CAAC;CACjE,qBAAK;;AJoJH,CAAA,qBAAM,CAAC;AAAE,CAAA,qBAAI,CAAE,eAAc;AAAE,CAAA,uBAAM,CAAE,CAAA,MAAM,KAAK;CAAA,gBAAE,CAAC,CAAC;;;;;CMrJhE,qBNsJgB,CAAA,SAAS,KAAK,EAAE,CMtJR;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;ATwJP,CAAA,qBAAM,CAAC;AAAE,CAAA,qBAAI,CAAE,eAAc;AAAE,CAAA,uBAAM,CAAE,CAAA,MAAM,KAAK;CAAA,gBAAE,CAAC,CAAC;;;;;CMxJhE,qBNyJgB,CAAA,SAAS,KAAK,EAAE,CMzJR;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;AT2JT,CAAA,qBAAM,CAAC;AAAE,CAAA,qBAAI,CAAE,UAAS;AAAE,CAAA,mBAAE,CAAE,CAAA,SAAS,GAAG;CAAA,gBAAE,CAAC,CAAC;;;;AI3JtD,CAAA,mBAAI,MAAM,EAAG,CAAA,CJ4JD,OAAO,OAAO,CI5JM,SAAwC,CAAC;CACjE,qBAAK;;;CEDb,qBN6JgB,CAAA,SAAS,OAAO,EAAE,CM7JV;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;AJAjB,CAAA,mBAAI,YAAY,ELgKH,KKhKuB,ALgKnB,CKhKmB;;;;CGApC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QD+JZ,CAAC;KACJ;CAGD,kBAAe,CAAf,UAAgB,MAAM,CAAE,CAAA,SAAS,CAAE,CAAA,SAAS,CAAE,CAAA,KAAK,CAAE,CAAA,OAAO;CAC1D,WAAO,CAAA,KAAK,CAAC,IAAI,WAAa,MAAM;;;;;CCtKxC,aAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;CHsKX,mBAAI,MAAM,CAAC,mBAAmB,CAAC,CAAE;wBACpB,CAAA,MAAM,CAAC,aAAa,CAAC;iBACjC,KAAM;wBACM,CAAA,SAAS,QAAQ;iBAC7B;CAAA,0BAGe;AACd,CAAA,wBAAO,CAAE,QAAO;AAChB,CAAA,yBAAQ;CACN,yBAAO,CAAA,SAAS,QAAQ,EAAE,KAAK,WAAE,IAAI,CAAK;CACxC,2BAAO,CAAA,IAAI,MAAM,QAAQ,CAAC;qBAC3B,EAAC,CAAC;oBACJ;iBACF;AAED,CAAA,qBAAM,CAAC,CAAC,MAAM,CAAC,SAAS,CAAE;AACxB,CAAA,qBAAI,CAAE,CAAA,MAAM,SAAS,CAAC,SAAS,KAAK,CAAC;AACrC,CAAA,qBAAI,CAAE,YAAW;AAAE,CAAA,uBAAM,CAAE,CAAA,MAAM,KAAK;CAAA,gBACvC,CAAC,CAAC,CAAC;2BAEU,QAAS,EAAA,KAAI,EAAA,IAAI,EAAA,CAAA,SAAS,KAAK;;;;;CM5LnD,qBN6L0B,CAAA,GAAG,YAAY,CAAC,OAAO,CAAE,MAAK,CAAE,UAAS,CAAC,CM7L5C;;yBCAxB,CAAA,IAAI,KAAK;;;;AHAT,CAAA,mBAAI,MAAM,EAAG,CAAA,CJ+LH,CAAC,OAAO,CI/Lc,QAAwC,CAAC;CACjE,qBAAK;;;CEDb,qBNgMc,CAAA,IAAI,cAAc,CAAC,MAAM,CAAE,UAAS,CAAE,KAAI,CAAE,KAAI,CAAC,CMhMvC;;AGAxB,CAAA,mBAAI,WAAW,EAAE,CAAA;;;;AJAjB,CAAA,mBAAI,YAAY,ELmMH,KKnMuB,ALmMnB,CKnMmB;;;;CGApC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QDkMZ,CAAC;KACJ;CAED,gBAAa,CAAb,UAAc,MAAM,CAAE,CAAA,SAAS,AAA2B;SAAzB,KAAI,6CAAG,KAAI;SAAE,KAAI,6CAAG,MAAK;;AACxD,CAAA,SAAI,EAAG,CAAA,IAAI,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,CAAA,CAAG,CAAA,SAAS,QAAQ,EAAE,CAAC;CAC5C,WAAO,CAAA,IAAI,KAAK,WAAE,IAAI;AAEhB,CAAJ,UAAI,CAAA,OAAO,EAAG,CAAA,SAAS,KAAK,CAAC;AAAC,CAAA,eAAM,CAAE,KAAI;AAAE,CAAA,eAAM,CAAE,KAAI;CAAA,QAAC,CAAC,KAAK,WAAE,MAAM;CACrE,eAAO,CAAA,KAAK,WAAE,OAAO,CAAE,CAAA,MAAM;AACvB,CAAJ,cAAI,CAAA,GAAG,EAAG,GAAE,CAAC;AACT,CAAJ,cAAI,CAAA,MAAM,EAAG,EACX,KAAK,CAAL,UAAM,IAAI,CAAE;AAAE,CAAA,kBAAG,GAAI,CAAA,IAAI,SAAS,EAAE,CAAC;eAAE,CACxC,CAAA;AACD,CAAA,oBAAS,MAAM,YAAY,CAAC,MAAM,CAAE,OAAM,CAAE,OAAM,CAAC,CAAC;AACpD,CAAA,iBAAM,GAAG,CAAC,KAAK,aAAQ;AAAE,CAAA,oBAAO,CAAC,GAAG,CAAC,CAAA;aAAE,EAAC,CAAC;AACzC,CAAA,qBAAU,YAAO;AAAE,CAAA,mBAAM,CAAC,GAAI,MAAK,CAAC,SAAS,CAAC,CAAC,CAAA;aAAE,EAAE,KAAI,CAAC,CAAC;aACzD,CAAC;WACH,CAAC;CAEH,aAAO,CAAA,OAAO,KAAK,WAAE,GAAG;AAClB,CAAJ,YAAI,CAAA,KAAK,cAAS;CAChB,gBAAM,IAAI,eAAc,CACtB,MAAM,KAAK,CACX,UAAS,CACT,CAAA,IAAI,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CACzB,CAAA,IAAI,MAAM,SAAS,CACnB,IAAG,CACJ,CAAC;WACH,CAAA,CAAC;CAGF,aAAI,IAAI,CAAE;CACR,iBAAO,CAAA,SAAS,CAAC,MAAM,CAAE,EAAC,SAAS,CAAC,CAAE;AAAE,CAAA,iBAAI,CAAE,KAAI;AAAE,CAAA,mBAAM,CAAE,KAAI;CAAA,YAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;WACjF,KAAM;AACL,CAAA,gBAAK,EAAE,CAAC;WACT;CAAA,UACD,CAAC;SACH,CAAC;KACJ;CAGD,eAAY,CAAZ,UAAa,MAAM,CAAE,CAAA,OAAO;AAC1B,CAAA,YAAO,EAAG,CAAA,CAAC,SAAS,CAAC,OAAO,CAAE,EAC5B,UAAU,CAAE,KAAI,CACjB,CAAC,CAAC;CAEH,WAAO,CAAA,KAAK,UAAY;;;CClP5B,aAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;CHkPX,mBAAI,OAAO,WAAW,CAAE;2BACR,CAAA,MAAM,MAAM,KAAK,EAAE;iBAClC,KAAM;2BACS,CAAA,MAAM,MAAM,MAAM,EAAE,KAAK,WAAE,KAAK,CAAK;CACjD,uBAAI,KAAK,GAAI,KAAI,CAAE;CACjB,0BAAM,IAAI,kBAAiB,CAAC,MAAM,KAAK,CAAE,CAAA,MAAM,MAAM,KAAK,CAAC,CAAC;qBAC7D;AACD,CADC,yBACM,MAAK,CAAC;mBACd,EAAC;iBACH;CAAA;;;;CM5PP,qBN8PwB,CAAA,OAAO,SAAS,WAAE,KAAK,CAAK;AAC5C,CAAA,sBAAK,OAAO,EAAG,OAAM,CAAC;CACtB,uBAAO,MAAK,CAAC;iBACd,EAAC,CMjQgB;;uBCAxB,CAAA,IAAI,KAAK;;;;AFAT,CAAA,mBAAI,YAAY,ELmQH,CAAA,KAAK,QAAQ,EKnQU,ALmQR,CKnQQ;;;;CGApC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QDkQZ,CAAC;KACJ;CAED,iBAAc,CAAd,UAAe,MAAM,AAAY;SAAV,KAAI,6CAAG,IAAG;CAC/B,WAAO,CAAA,KAAK,CAAC,IAAI,WAAY;;CCxQjC,aAAO,CCAP,eAAe,cDAS,ACAK,CCA7B,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;;CGDjB,qBNyQ4B,CAAA,MAAM,UAAU,CAAC,CAAE,IAAI,CAAE,KAAI,CAAE,CAAC,CMzQpC;;2BCAxB,CAAA,IAAI,KAAK;;;;AFAT,CAAA,mBAAI,YAAY,EL2QH,CAAA,CAAC,OAAO,CAAC,SAAS,YAAG,UAAU,CAAE,CAAA,QAAQ,CAAK;AAC/C,CAAJ,oBAAI,CAAA,IAAI,EAAG,CAAA,QAAQ,YAAY,IAAI,KAAK,CAAC;AACrC,CAAJ,oBAAI,CAAA,GAAG,EAAI,CAAA,QAAQ,CAAC,QAAQ,YAAY,IAAI,IAAI,CAAC,CAAC;CAClD,qBAAI,GAAG,IAAK,CAAA,UAAU,CAAC,IAAI,CAAC,CAAE;AAC5B,CAAA,6BAAU,CAAC,IAAI,CAAC,EAAG,CAAA,UAAU,CAAC,IAAI,CAAC,EAAG,EAAC,CAAC;mBACzC;AACD,CADC,uBACM,WAAU,CAAC;iBACnB,EAAE;AAAE,CAAA,sBAAK,CAAE,EAAC;AAAE,CAAA,uBAAM,CAAE,EAAC;CAAA,gBAAE,CKlRI,ALkRH,CKlRG;;;;CGApC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CLCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QDiRZ,CAAC;KACJ;CAED,YAAS,CAAT,UAAU,MAAM,AAAc;SAAZ,QAAO,6CAAG,GAAE;AAE5B,CAAA,YAAO,EAAG,CAAA,CAAC,SAAS,CAAC,OAAO,CAAE;AAC5B,CAAA,mBAAY,CAAE,MAAK;AACnB,CAAA,mBAAY,CAAE,MAAK;AACnB,CAAA,WAAI,CAAE,IAAG;CAAA,MACV,CAAC,CAAC;AAGC,CAAJ,QAAI,CAAA,aAAa,EAAG,GAAE,CAAC;CACvB,SAAI,OAAO,aAAa;AAAE,CAAA,oBAAa,IAAI,EAAG,KAAI,CAAE;AAEpD,CAFoD,WAE7C,CAAA,MAAM,kBAAkB,CAAC,aAAa,CAAC,KAAK,WAAE,UAAU;AACzD,CAAJ,UAAI,CAAA,SAAS,EAAG,CAAA,CAAC,OAAO,CAAC,UAAU,YAAG,SAAS,CAAK;AAC9C,CAAJ,YAAI,CAAA,GAAG,EAAG,CAAA,SAAS,YAAY,IAAI,CAAC;CACpC,eAAO,EACL,GAAG,IAAI,GAAI,CAAA,MAAM,SAAS,UAAU,CAAA,EACpC,CAAA,GAAG,IAAI,GAAI,CAAA,MAAM,KAAK,CAAA,EACtB,EAAE,OAAO,KAAK,GAAI,IAAG,CAAA,EAAI,CAAA,GAAG,KAAK,GAAI,CAAA,OAAO,KAAK,CAAE,CACpD,CAAA;SACF,EAAC,CAAC;CAEH,aAAO,CAAA,CAAC,OAAO,CAAC,SAAS,YAAG,QAAQ,CAAK;CAAE,eAAO,CAAA,QAAQ,YAAY,IAAI,IAAI,CAAA;SAAE,EAAC,CAAC;SAClF,CAAC;KACJ;GACF,CAAA;;CU/SD;CCAA,YAAwB;CAAE,gBAAyB;KAAE;ACArD,CAAA,aAAU,CAAE,KAAI;CAAA,GFAQ;CbEb,KAAK,CgBFhB,MAAO,OAAM,CAAA,GAAK,YAAW,CAAA,CAAG,OAAM,EAAG,KAAI,ChBEV,CAAC;CGgTpC","sourcesContent":["module.exports = function() {\n            $__placeholder__0\n          }.call($__placeholder__1);","var __moduleName = $__placeholder__0;","require($__placeholder__0)","import { _, t, Q, async, defer, config, dynamic } from 'azk';\nimport { ImageNotAvailable, SystemRunError, RunCommandError } from 'azk/utils/errors';\nimport { Balancer } from 'azk/system/balancer';\nimport net from 'azk/utils/net';\n\ndynamic(this, {\n  MemoryStream() {\n    return require('memorystream');\n  },\n\n  docker() {\n    return require('azk/docker').default;\n  }\n});\n\nvar Run = {\n  runProvision(system, options = {}) {\n    return async(this, function* (notify) {\n      var steps = system.provision_steps;\n\n      options = _.defaults(options, {\n        provision_force: false,\n        provision_verbose: false,\n      });\n\n      if (_.isEmpty(steps)) return null;\n      if ((!options.provision_force) && system.provisioned) return null;\n\n      // provision command (require /bin/sh)\n      var cmd  = [\"/bin/sh\", \"-c\", \"( \" + steps.join('; ') + \" )\"];\n\n      // Capture outputs\n      var output = \"\";\n      if (!options.provision_verbose) {\n        options = _.clone(options);\n        options.shell_type = \"provision\";\n        options.stdout = new MemoryStream();\n        options.stderr = options.stdout;\n        options.stdout.on('data', (data) => {\n          output += data.toString();\n        });\n      } else {\n        output = t(\"system.seelog\");\n      }\n\n      notify({ type: \"provision\", system: system.name });\n      var exitResult = yield system.runShell(cmd, options);\n      if (exitResult.code != 0) {\n        throw new RunCommandError(system.name, cmd.join(' '), output);\n      }\n      // save the date provisioning\n      system.provisioned = new Date();\n    });\n  },\n\n  runShell(system, command, options = {}) {\n    return async(this, function* () {\n      options = _.defaults(options, {\n        remove: false,\n        sequencies: yield this._getSequencies(system)\n      });\n\n      // Envs\n      var deps_envs = yield system.checkDependsAndReturnEnvs(options, false);\n      options.envs  = _.merge(deps_envs, options.envs || {});\n\n      yield this._check_image(system, options);\n      var docker_opt = system.shellOptions(options);\n\n      var container  = yield docker.run(system.image.name, command, docker_opt);\n      var data       = yield container.inspect();\n\n      // Remove before run\n      if (options.remove) { yield container.remove(); }\n\n      return {\n        code: data.State.ExitCode,\n        container: container,\n        containerId: container.Id,\n        removed: options.remove,\n      }\n    });\n  },\n\n  runDaemon(system, options = {}) {\n    return async(this, function* (notify) {\n      // TODO: add instances and dependencies options\n      // Prepare options\n      var image = yield this._check_image(system, options);\n      options.image_data = image;\n\n      // Check provision\n      yield system.runProvision(options);\n\n      options = _.defaults(options, {\n        sequencies: yield this._getSequencies(system),\n        wait: system.wait_scale,\n      });\n\n      var docker_opt = system.daemonOptions(options);\n      var command    = docker_opt.command;\n      var container  = yield docker.run(system.image.name, command, docker_opt);\n\n      if (options.wait) {\n        // TODO: support to wait udp protocol\n        var data = yield container.inspect();\n        var port_data = _.chain(data.NetworkSettings.Access)\n          .filter((port) => {\n            return port.protocol == 'tcp'\n          })\n          .find()\n          .value();\n\n        if (!_.isEmpty(port_data)) {\n          var retry   = options.timeout || config('docker:run:retry');\n          var timeout = options.retry   || config('docker:run:timeout');\n\n          yield this._wait_available(system, port_data, container, retry, timeout);\n        }\n      }\n\n      // Adding to balancer\n      yield Balancer.add(system, container);\n\n      return container;\n    });\n  },\n\n  stop(system, instances, options = {}) {\n    options = _.defaults(options, {\n      kill: false,\n      remove: true,\n    });\n\n    return async(function* (notify) {\n      var container = null;\n\n      // Default stop all\n      if (_.isEmpty(instances)) {\n        instances = yield system.instances();\n      }\n\n      while (container = instances.pop()) {\n        container = docker.getContainer(container.Id);\n\n        // Remove from balancer\n        yield Balancer.remove(system, container);\n\n        if (options.kill) {\n          notify({ type: 'kill_service', system: system.name });\n          yield container.kill();\n        } else {\n          notify({ type: 'stop_service', system: system.name });\n          yield container.stop();\n        }\n        notify({ type: \"stopped\", id: container.Id });\n        if (options.remove)\n          yield container.remove();\n      }\n\n      return true;\n    });\n  },\n\n  // Wait for container/system available\n  _wait_available(system, port_data, container, retry, timeout) {\n    return async(this, function* (notify) {\n      if (config('agent:requires_vm')) {\n        var host = config('agent:vm:ip');\n      } else {\n        var host = port_data.gateway;\n      }\n\n      // Wait for available\n      var wait_opts = {\n        timeout: timeout,\n        retry_if: () => {\n          return container.inspect().then((data) => {\n            return data.State.Running;\n          });\n        },\n      };\n\n      notify(_.merge(port_data, {\n        name: system.portName(port_data.name),\n        type: \"wait_port\", system: system.name\n      }));\n\n      var address = `tcp://${host}:${port_data.port}`;\n      var running = yield net.waitService(address, retry, wait_opts);\n\n      if (!running) {\n        yield this.throwRunError(system, container, null, true);\n      }\n\n      return true;\n    });\n  },\n\n  throwRunError(system, container, data = null, stop = false) {\n    data = data ? Q(data) : container.inspect();\n    return data.then((data) => {\n      // Get container log\n      var promise = container.logs({stdout: true, stderr: true}).then((stream) => {\n        return defer((resolve, reject) => {\n          var acc = '';\n          var stdout = {\n            write(data) { acc += data.toString(); }\n          }\n          container.modem.demuxStream(stream, stdout, stdout);\n          stream.on('end', () => { resolve(acc) });\n          setTimeout(() => { reject(new Error(\"timeout\")) }, 4000);\n        });\n      });\n\n      return promise.then((log) => {\n        var raise = () => {\n          throw new SystemRunError(\n            system.name,\n            container,\n            data.Config.Cmd.join(' '),\n            data.State.ExitCode,\n            log\n          );\n        };\n\n        // Stop and remove container\n        if (stop) {\n          return this.stop(system, [container], { kill: true, remove: true }).then(raise);\n        } else {\n          raise();\n        }\n      });\n    });\n  },\n\n  // Check and pull image\n  _check_image(system, options) {\n    options = _.defaults(options, {\n      image_pull: true,\n    });\n\n    return async(function* () {\n      if (options.image_pull) {\n        var promise = system.image.pull();\n      } else {\n        var promise = system.image.check().then((image) => {\n          if (image == null) {\n            throw new ImageNotAvailable(system.name, system.image.name);\n          }\n          return image;\n        });\n      }\n\n      var image = yield promise.progress((event) => {\n        event.system = system;\n        return event;\n      });\n\n      return image.inspect();\n    });\n  },\n\n  _getSequencies(system, type = \"*\") {\n    return async(this, function*() {\n      var instances = yield system.instances({ type: type });\n\n      return _.reduce(instances, (sequencies, instance) => {\n        var type = instance.Annotations.azk.type;\n        var seq  = parseInt(instance.Annotations.azk.seq);\n        if (seq === sequencies[type]) {\n          sequencies[type] = sequencies[type] + 1;\n        }\n        return sequencies;\n      }, { shell: 1, daemon: 1 });\n    });\n  },\n\n  instances(system, options = {}) {\n    // Default options\n    options = _.defaults(options, {\n      include_dead: false,\n      include_exec: false,\n      type: \"*\",\n    });\n\n    // Include dead containers\n    var query_options = {};\n    if (options.include_dead) query_options.all = true ;\n\n    return docker.azkListContainers(query_options).then((containers) => {\n      var instances = _.filter(containers, (container) => {\n        var azk = container.Annotations.azk;\n        return (\n          azk.mid == system.manifest.namespace &&\n          azk.sys == system.name &&\n          ( options.type == \"*\" || azk.type == options.type )\n        )\n      });\n\n      return _.sortBy(instances, (instance) => { return instance.Annotations.azk.seq });\n    });\n  },\n}\n\nexport { Run }\n","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.returnValue = $__placeholder__0","return $__placeholder__0","$ctx.sent","return $ctx.end()","$ctx.maybeThrow()","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","typeof global !== 'undefined' ? global : this"]}