{"version":3,"file":"client.js","sources":["../../../src/agent/client.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, Q, defer, log } from 'azk';\nimport { config, set_config } from 'azk';\nimport { Agent } from 'azk/agent';\nimport { AgentNotRunning } from 'azk/utils/errors';\n\nvar request = require('request');\n\nvar HttpClient = {\n  url(path) {\n    return `unix:\\/\\/${config('paths:api_socket')}${path}` ;\n  },\n\n  request(method, path, opts = {}) {\n    return Q.ninvoke(request, method, _.defaults(opts, {\n      url : this.url(path),\n      json: true,\n    }));\n  },\n\n  get(...args) {\n    return this.request('get', ...args);\n  }\n}\n\nvar Client = {\n  status(opts) {\n    var status = {\n      agent   : false,\n      docker  : false,\n      balancer: false,\n    }\n\n    return defer((resolve, _reject, notify) => {\n      if (Agent.agentPid().running) {\n        notify({ type: \"status\", status: \"running\" });\n        status.agent = true;\n      } else {\n        notify({ type: \"status\", status: \"not_running\" });\n      }\n      resolve(status);\n    });\n  },\n\n  start(opts) {\n    return Agent.start(opts).then(() => { return 0 });\n  },\n\n  stop(opts) {\n    return Agent.stop();\n  },\n\n  configs() {\n    return HttpClient\n      .request('get', '/configs')\n      .spread((response, body) => { return body; });\n  },\n\n  require() {\n    return this.status()\n      .then((status) => {\n        if (status.agent) return this.configs();\n        throw new AgentNotRunning();\n      })\n      .then((configs) => {\n        _.each(configs, (value, key) => {\n          set_config(key, value);\n        });\n      });\n  },\n}\n\nexport { Client, HttpClient };\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.spread($__placeholder__0)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}