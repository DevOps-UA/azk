{"version":3,"file":"index.js","sources":["../../../src/agent/index.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","src/agent/index.js","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","sourcesContent":["module.exports = function() {\n            $__placeholder__0\n          }.call($__placeholder__1);","var __moduleName = $__placeholder__0;","require($__placeholder__0)","import { Q, config, defer, log, _, dynamic } from 'azk';\nimport { config, set_config } from 'azk';\nimport { Pid } from 'azk/utils/pid';\nimport { AgentStartError } from 'azk/utils/errors';\n\ndynamic(this, {\n  Server() {\n    return require('azk/agent/server').Server;\n  }\n});\n\nvar Agent = {\n  wait: null,\n\n  wait_notify(status) {\n    if (typeof(process.send) === 'function') {\n      try {\n        process.send(status);\n      } catch (err) { }\n    }\n  },\n\n  change_status(status, data = null) {\n    this.wait_notify({ type: \"status\", status, pid: process.pid, data: data });\n  },\n\n  start(options) {\n    var pid = this.agentPid();\n    return defer((resolve, reject, notify) => {\n      this.wait_notify = notify;\n      options = _.defaults(options, { configs: {} });\n\n      if (pid.running) {\n        this.change_status('already');\n        resolve(1);\n      } else {\n        this.change_status('starting');\n        if (options.daemon) {\n          return this.launchDaemon(options.configs);\n        } else {\n          this.wait = resolve;\n          this.processWrapper(options.configs).progress(notify).fail((err) => {\n            this.change_status(\"error\", err.stack || err);\n            return this.stop().progress(notify).then(() => {\n              return 0;\n            });\n          });\n        }\n      }\n    });\n  },\n\n  stop(opts) {\n    var pid = this.agentPid();\n    return defer((resolve, reject, notify) => {\n      if (this.wait) {\n        this.change_status(\"stoping\");\n\n        return Server.stop().progress(notify).then(() => {\n          try { pid.unlink(); } catch(e) {}\n          this.change_status(\"stoped\");\n          this.wait(0);\n          resolve(0);\n        }).fail((error) => {\n          try { pid.unlink(); } catch(e) {}\n          this.change_status(\"error\", error.stack || error);\n          this.wait(1);\n          reject(1);\n        });\n      }\n\n      // Stop by signal\n      if (pid.running) pid.term();\n\n      return resolve();\n    });\n  },\n\n  agentPid() {\n    log.info('get agent status');\n    var a_pid = new Pid(config(\"paths:agent_pid\"));\n    log.info('agent is running: %s', a_pid.running);\n    return a_pid;\n  },\n\n  processStateHandler() {\n    var pid = this.agentPid();\n    var stoping = false;\n    var gracefullExit = () => {\n      if (!stoping) {\n        stoping = true;\n        log.info('Azk agent has been killed by signal');\n        return this.stop({}, true);\n      }\n    }\n\n    try {\n      pid.update(process.pid);\n    } catch(e){}\n\n    process.on('SIGTERM', gracefullExit);\n    process.on('SIGINT' , gracefullExit);\n    process.on('SIGQUIT', gracefullExit);\n  },\n\n  processWrapper(configs) {\n    // Merge configs to global confgs\n    var acc_keys = 'agent:config_keys';\n    _.each(configs, (value, key) => {\n      set_config(key, value);\n      set_config(acc_keys, [...config(acc_keys), key]);\n    });\n\n    // Set process name\n    process.title = 'azk-agent';\n\n    return defer((resolve, reject, notify) => {\n      this.processStateHandler();\n      return Server.start().then(() => {\n        this.change_status(\"started\");\n      });\n    });\n  },\n\n  launchDaemon(configs) {\n    return defer((done) => {\n      var child_process = require('child_process');\n\n      log.debug(\"Launching agent in daemon mode\");\n      var child = child_process.fork(__filename, [], {\n        silent  : false,\n        detached: true,\n        cwd     : config('paths:azk_root'),\n        env     : _.extend({}, process.env),\n      }, (err, stdout, stderr) => {\n        if (err) done.reject(err.stack);\n      });\n\n      var exit = () => {\n        done.resolve(1);\n      }\n\n      var msg_cb = (msg) => {\n        log.debug('agent child msg: %s', msg);\n        this.change_status(msg.status, msg.data);\n        if (msg.status == \"started\") {\n          child.removeListener('exit', exit);\n          child.removeListener('message', msg_cb);\n          child.unref();\n          return done.resolve(0);\n        }\n      };\n\n      // Connect child events\n      child.on('exit', exit);\n      child.on('message', msg_cb);\n\n      // Send start to child with confgs\n      child.send({ type: 'start', configs: configs });\n    });\n  },\n}\n\nexport { Agent };\n\n//\n// If this file is a main process, it means that\n// this process is being forked by azk itself\nif (require.main === module) {\n  Agent.wait = function(code) {\n    process.exit(code);\n  }\n\n  process.on('message', (msg) => {\n    if (msg.type = 'start') {\n      Agent.processWrapper(msg.configs).fail((error) => {\n        Agent.change_status(\"error\", error.toString());\n        return Agent.stop()\n      });\n    }\n  });\n}\n","$traceurRuntime.spread($__placeholder__0)","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","typeof global !== 'undefined' ? global : this"]}