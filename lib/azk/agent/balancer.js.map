{"version":3,"file":"balancer.js","sources":["../../../src/agent/balancer.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, Q, path, fs, config, log, defer, async } from 'azk';\nimport { net } from 'azk/utils';\nimport { Tools } from 'azk/agent/tools';\nimport { AgentStartError } from 'azk/utils/errors';\n\nvar url     = require('url');\nvar forever = require('forever-monitor');\nvar MemoryStream    = require('memorystream');\nvar MemcachedDriver = require('memcached');\n\n// TODO: Reaplce forever for a better solution :/\nvar Balancer = {\n  memcached: null,\n  hipache  : null,\n  mem_client : null,\n\n  get memCached() {\n    if (!this.mem_client) {\n      var socket = config('paths:memcached_socket');\n      this.mem_client = new MemcachedDriver(socket);\n    }\n    return this.mem_client;\n  },\n\n  getBackends(host) {\n    var key = 'frontend:' + host;\n    return Q.ninvoke(this.memCached, 'get', key).then((entries) => {\n      return entries ? entries : [host];\n    });\n  },\n\n  addBackend(hosts, backend) {\n    var self = this;\n    return async(function* () {\n      for(var host of (_.isArray(hosts) ? hosts : [hosts])) {\n        var key = 'frontend:' + host\n        var entries = yield self.getBackends(host);\n        entries = self._removeEntry(entries, backend);\n        entries.push(backend);\n        yield Q.ninvoke(self.memCached, 'set', key, entries, 0);\n      }\n    });\n  },\n\n  removeBackend(hosts, backend) {\n    var self = this;\n    return async(function* () {\n      for(var host of (_.isArray(hosts) ? hosts : [hosts])) {\n        var key = 'frontend:' + host;\n        var entries = yield self.getBackends(host);\n        entries = self._removeEntry(entries, backend);\n        yield Q.ninvoke(self.memCached, 'set', key, entries, 0);\n      }\n    });\n  },\n\n  _removeEntry(entries, backend) {\n    return _.filter(entries, (entry) => { return entry != backend });\n  },\n\n  start() {\n    return Tools.async_status(\"balancer\", this, function* (change_status) {\n      if (!this.isRunnig()) {\n        var socket = config('paths:memcached_socket');\n        var ip     = net.calculateGatewayIp(config(\"agent:vm:ip\"))\n        var port   = yield net.getPort();\n\n        // Memcached\n        change_status(\"starting_memcached\");\n        yield this.start_memcached(socket);\n        change_status(\"started_memcached\");\n\n        // Hipache\n        change_status(\"starting_hipache\");\n        yield this.start_hipache(ip, port, socket);\n        change_status(\"started_hipache\");\n\n        // Dns server\n        change_status(\"starting_dns\");\n        yield this.start_dns(ip, port);\n        change_status(\"started_dns\");\n\n        // Socat\n        change_status(\"starting_socat\");\n        yield this.start_socat(ip, port);\n        change_status(\"started_socat\");\n      }\n    });\n  },\n\n  start_dns(ip, port) {\n    return async(this, function* () {\n      var Manifest = require('azk/manifest').Manifest;\n      var manifest = new Manifest(config('paths:azk_root'), true);\n      var system   = manifest.system('dns', true);\n\n      // Wait docker\n      var address = url.parse(config(\"docker:host\"));\n      var success = yield net.waitService(address.hostname, address.port, 5, { context: \"dns\" });\n      if (!success) {\n        throw new AgentStartError(t(errors.not_connect_docker));\n      }\n\n      var stdout = new MemoryStream();\n      var output = \"\";\n      stdout.on('data', (data) => {\n        output += data.toString();\n      });\n\n      var result = yield system.scale(1, stdout, true);\n      if (!result) {\n        throw new Error('Fail to start balancer: ' + output);\n      }\n    });\n  },\n\n  start_socat(ip, port) {\n    return async(this, function* () {\n      var Manifest = require('azk/manifest').Manifest;\n      var manifest = new Manifest(config('paths:azk_root'), true);\n      var system   = manifest.system('balancer_redirect', true);\n      system.add_env('BALANCER_IP', ip);\n      system.add_env('BALANCER_PORT', port);\n\n      // Wait docker\n      var address = url.parse(config(\"docker:host\"));\n      var success = yield net.waitService(address.hostname, address.port, 5, { context: \"socat\" });\n      if (!success) {\n        throw new AgentStartError(t(errors.not_connect_docker));\n      }\n\n      var stdout = new MemoryStream();\n      var output = \"\";\n      stdout.on('data', (data) => {\n        output += data.toString();\n      });\n\n      var result = yield system.scale(1, stdout, true);\n      if (!result) {\n        throw new Error('Fail to start balancer: ' + output);\n      }\n    });\n  },\n\n  start_hipache(ip, port, socket) {\n    var pid  = config(\"paths:hipache_pid\");\n    var file = this._check_config(ip, port, socket);\n    var cmd = [ 'nvm', 'hipache', '--config', file ];\n\n    log.info(\"starting hipache\");\n    return this._start_service(cmd, pid).then((child) => {\n      this.hipache = child;\n      log.info(\"hipache started in %s port with file config\", port, file);\n      child.on('stop', () => {\n        log.info('hipache stoped');\n      });\n      child.on('exit:code', (code) => {\n        if (code && code != 0) {\n          log.error('hipache exit code: ' + code);\n        }\n      });\n      child.on('stdout', (data) => {\n        log.info('hipache: %s', data.toString().trim());\n      });\n      child.on('stderr', (data) => {\n        log.info('hipache: %s', data.toString().trim());\n      });\n    });\n  },\n\n  start_memcached(socket) {\n    // Remove socket\n    if (fs.existsSync(socket)) fs.unlinkSync(socket);\n    var pid = config(\"paths:memcached_pid\");\n    var cmd = [ 'nvm', 'memcachedjs', '--socket', socket ];\n\n    log.info(\"starting memcachedjs\");\n    return this._start_service(cmd, pid).then((child) => {\n      this.memcached = child;\n      log.info(\"memcachedjs started in socket: \", socket);\n      child.on('stop', () => {\n        log.info('memcached stoped');\n      });\n      child.on('exit:code', (code) => {\n        if (code && code != 0) {\n          log.error('memcached exit code: ' + code);\n        }\n      });\n      child.on('stdout', (data) => {\n        log.info('memcached: %s', data.toString().trim());\n      });\n      child.on('stderr', (data) => {\n        log.info('memcached: %s', data.toString().trim());\n      });\n    });\n  },\n\n  stop() {\n    if (this.isRunnig()) {\n      log.debug(\"call to stop balancer\");\n      return Tools.async_status(\"balancer\", this, function* (change_status) {\n        yield defer((resolve) => {\n          if (this.hipache && this.hipache.running) {\n            change_status(\"stopping_hipache\");\n            this.hipache.on('stop', () => {\n              change_status(\"stoped_hipache\");\n              resolve();\n            });\n            process.kill(this.hipache.pid);\n          } else {\n            resolve();\n          }\n        });\n        yield defer((resolve) => {\n          if (this.memcached && this.memcached.running) {\n            change_status(\"stopping_memcached\");\n            this.memcached.on('stop', () => {\n              change_status(\"stoped_memcached\");\n              resolve();\n            });\n            process.kill(this.memcached.pid);\n          } else {\n            resolve();\n          }\n        });\n      });\n    } else {\n      return Q();\n    }\n  },\n\n  isRunnig() {\n    return (\n      (this.hipache && this.hipache.running) ||\n      (this.memcached && this.memcached.running)\n    );\n  },\n\n  _start_service(cmd, pid) {\n    cmd = [path.join(config('paths:azk_root'), 'bin', 'azk'), ...cmd];\n    return defer((resolve, reject, notify) => {\n      var child = forever.start(cmd, {\n        max : 1,\n        silent : true,\n        pidFile: pid\n      });\n\n      child.on('exit:code', () => {\n        reject();\n        process.kill(process.pid);\n      });\n      child.on('start', () => resolve(child));\n    });\n  },\n\n  _check_config(ip, port, memcached_socket) {\n    var file   = config('paths:balancer_file');\n\n    var data = {\n      server: {\n        accessLog: \"./data/logs/hipache_access.log\",\n        workers: 3,\n        maxSockets: 100,\n        deadBackendTTL: 30\n      },\n      http: {\n        port: port,\n        bind: [\"127.0.0.1\", ip, \"::1\"]\n      },\n      driver: [\"memcached://\" + memcached_socket]\n    }\n\n    // set content\n    fs.writeFileSync(file, JSON.stringify(data, null, '  '));\n    return file;\n  }\n}\n\nexport { Balancer }\n\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","return $__placeholder__0","$ctx.sent","$ctx.maybeThrow()","return $ctx.end()","$traceurRuntime.spread($__placeholder__0)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}