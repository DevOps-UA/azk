{"version":3,"file":"configure.js","sources":["../../../src/agent/configure.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/18","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, os, Q, async } from 'azk';\nimport { config, set_config } from 'azk';\nimport { UIProxy } from 'azk/cli/ui';\nimport { OSNotSupported, DependencyError } from 'azk/utils/errors';\nimport { isIPv4 } from 'net';\n\nvar which = require('which');   // Search for command in path\nvar qfs   = require('q-io/fs');\n\nexport class Configure extends UIProxy {\n  constructor(user_interface) {\n    super(user_interface);\n    this.dns_separator = ':';\n  }\n\n  // Run configures and checks by operational system\n  run() {\n    var method = this[os.platform()];\n    if (method) {\n      return method.apply(this)\n        .then((confgs) => {\n          return _.reduce(confgs, (acc, lines) => {\n            if (!_.isEmpty(lines)) {\n              _.each(lines, (line, key) => acc[key] = line);\n            }\n            return acc;\n          }, {});\n        });\n    } else {\n      throw new OSNotSupported(os.platform());\n    }\n  }\n\n  // Mac OS X configure and checks\n  // TODO: Check dependencies versions\n  darwin() {\n    this.dns_separator = '.';\n    return Q.all([\n      this._which('VBoxManage'),\n      this._which('unfsd', 'paths:unfsd'),\n      this._checkAndConfigureNetwork(),\n      this._checkAndGenerateSSHKeys(),\n      this._loadDnsServers(),\n    ]);\n  }\n\n  // Linux configure and checks\n  //linux() {\n  //}\n\n  _which(command, save_key = null) {\n    return Q.nfcall(which, command)\n      .then((path) => {\n        if (save_key) return { [save_key]: path };\n      })\n      .fail(() => {\n        throw new DependencyError(command);\n      });\n  }\n\n  // Check for ssh keys, used for connection vm\n  _checkAndGenerateSSHKeys() {\n    var file = config('agent:vm:ssh_key');\n    return qfs.exists(file).then((exist) => {\n      if (!exist) {\n        this.info('configure.generating_key');\n        var script = `\n          set -x;\n          ssh-keygen -t rsa -f ${file} -N ''; result=$?;\n          set +x;\n          echo \"\";\n          exit $result;\n        `;\n        return this.execSh(script).then((code) => {\n          if (code != 0) {\n            throw new DependencyError('ssh_keygen');\n          } else {\n            return code;\n          }\n        });\n      }\n    });\n  }\n\n  // Check vm ip is configurat\n  _checkAndConfigureNetwork() {\n    return async(this, function* () {\n      var file  = config('agent:balancer:file_dns');\n      var exist = yield qfs.exists(file);\n      var ip    = null;\n\n      // File exist? Get content\n      if (exist) {\n        var content = yield qfs.read(file);\n        ip = this._parseNameserver(content)[0];\n      }\n\n      // Not exist or invalid content\n      if (_.isEmpty(ip)) {\n        this.warning('configure.vm_ip_msg');\n        ip = yield this._getNetworkIp();\n        yield this._generateResolverFile(ip, file);\n      }\n\n      // Save configuration\n      return {\n        ['agent:vm:ip']      : ip,\n        ['agent:dns:ip']     : ip,\n        ['agent:balancer:ip']: ip,\n        ['docker:host']      : `http://${ip}:2375`,\n      };\n    });\n  }\n\n  // Generate file /etc/resolver/*\n  _generateResolverFile(ip, file) {\n    var port = config('agent:dns:port');\n\n    // Creating resolver file and adding ip (with sudo)\n    this.info('configure.adding_ip', { ip, file });\n    ip = `${ip}${this.dns_separator}${port}`;\n    var script = `\n      echo \"\";\n      set -x;\n      sudo mkdir -p /etc/resolver 2>/dev/null;\n      echo \"# azk agent configure\" | sudo tee ${file};\n      echo \"nameserver ${ip}\" | sudo tee -a ${file};\n      sudo chown \\$(id -u):\\$(id -g) ${file};\n      set +x;\n      echo \"\";\n    `;\n\n    // Call interactive shell (to support sudo)\n    return this.execSh(script).then((code) => {\n      if (code != 0) {\n        throw new DependencyError('network');\n      } else {\n        return code;\n      }\n    });\n  }\n\n  _parseNameserver(content) {\n    var lines   = content.split('\\n');\n    var regex   = /^\\s*nameserver\\s{1,}((?:[0-9]{1,3}\\.){3}[0-9]{1,3})/;\n    var capture = null;\n    return _.reduce(lines, (nameservers, line) => {\n      if (capture = line.match(regex)) {\n        var ip = capture[1];\n        if (isIPv4(ip)) nameservers.push(ip);\n      }\n      return nameservers;\n    }, []);\n  }\n\n  // TODO: improve to get a free network ip ranges\n  // TODO: filter others /etc/resolver/* azk files\n  _getNetworkIp() {\n    var question = {\n      name    : 'ip',\n      message : 'configure.ip_question',\n      default : config('agent:vm:ip'),\n      validate: (value) => {\n        var data       = { ip: value };\n        var of_range   = this.t('configure.ip_of_range', data);\n        var ip_invalid = this.t('configure.ip_invalid', data);\n        var ranges     = [ '127.0.0.1', '0.0.0.0' ];\n\n        // Check is valid ip\n        if (!isIPv4(value)) { return ip_invalid; }\n        if (_.contains(ranges, value)) { return of_range; }\n\n        return true;\n      }\n    };\n\n    return this.prompt(question)\n      .then((answers) => {\n        return answers.ip;\n      });\n  }\n\n  _loadDnsServers() {\n    return async(this, function* () {\n      var cf_key = 'agent:dns:nameservers';\n      var nameservers = this._filderDnsServers(config(cf_key));\n\n      if (_.isEmpty(nameservers)) {\n        nameservers = this._filderDnsServers(yield this._readResolverFile());\n      }\n\n      if (_.isEmpty(nameservers)) {\n        nameservers = config('agent:dns:defaultserver');\n      }\n\n      return { [cf_key]: nameservers };\n    });\n  }\n\n  _filderDnsServers(nameservers) {\n    return _.filter(nameservers, (server) => { return !server.match(/^127\\./) });\n  }\n\n  _readResolverFile() {\n    var file = \"/etc/resolv.conf\";\n    return qfs.read(file).then(this._parseNameserver);\n  }\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.maybeThrow()","$ctx.returnValue = $__placeholder__0","return $ctx.end()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}