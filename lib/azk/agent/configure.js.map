{"version":3,"file":"configure.js","sources":["../../../src/agent/configure.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/18","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,CAAA,YAAY,wBAAoB,CAAC;UCArC,CAAA,OAAO,CFAyB,KAAK,CEAX;;;;;UAA1B,CAAA,OAAO,CFC4B,KAAK,CEDd;;;aAA1B,CAAA,OAAO,CFEiB,YAAY,CEFV;UAA1B,CAAA,OAAO,CFGyC,kBAAkB,CEHxC;;;YAA1B,CAAA,OAAO,CFIgB,KAAK,CEJF;AFMtB,CAAJ,EAAI,CAAA,KAAK,EAAG,CAAA,OAAO,CAAC,OAAO,CAAC,CAAC;AACzB,CAAJ,EAAI,CAAA,GAAG,EAAK,CAAA,OAAO,CAAC,SAAS,CAAC,CAAC;AGP3B,CAAJ,EAAI,YHSG,SAAM,UAAS,CACR,cAAc,CAAE;AIV9B,CJWI,gBIXW,UAAU,6CJWf,cAAc,EIV6B,CJU3B;AACtB,CAAA,KAAI,cAAc,EAAG,IAAG,CAAC;CGZY,AHatC,CGbsC;AEArC,CAAJ,EAAI,uBAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CNgB3B,IAAG,CAAH,UAAI,CAAE;AACA,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;CACjC,OAAI,MAAM,CAAE;CACV,WAAO,CAAA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC;KAC3B,KAAM;CACL,UAAM,IAAI,eAAc,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;KACzC;CAAA,EACF;CAID,OAAM,CAAN,UAAO,CAAE;AACP,CAAA,OAAI,cAAc,EAAG,IAAG,CAAC;CACzB,SAAO,CAAA,CAAC,IAAI,CAAC,CACX,IAAI,OAAO,CAAC,YAAY,CAAC,CACzB,CAAA,IAAI,OAAO,CAAC,OAAO,CAAC,CACpB,CAAA,IAAI,0BAA0B,EAAE,CACjC,CAAC,CAAC;GACJ;CAMD,OAAM,CAAN,UAAO,OAAO;CACZ,SAAO,CAAA,CAAC,OACC,CAAC,KAAK,CAAE,QAAO,CAAC,KAClB,YAAO;CACV,UAAM,IAAI,gBAAe,CAAC,OAAO,CAAC,CAAC;KACpC,EAAC,CAAC;GACN;CAED,0BAAyB,CAAzB,UAA0B;CACxB,SAAO,CAAA,KAAK,CAAC,IAAI,WAAa;;;;;;COjDlC,WAAO,CCAP,eAAe,cAAc,ADAL,CEAxB,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;oBTiDC,CAAA,MAAM,CAAC,yBAAyB,CAAC;;;;;CUlDnD,mBVmDwB,CAAA,GAAG,OAAO,CAAC,IAAI,CAAC,CUnDhB;;qBCAxB,CAAA,IAAI,KAAK;;;;ACAT,CAAA,iBAAI,MAAM,EAAG,CAAA,CZoDH,CAAC,KAAK,CYpDgB,UAAwC,CAAC;CACjE,mBAAK;;AZoDL,CAAA,iBAAI,QAAQ,CAAC,qBAAqB,CAAC,CAAC;;;;;CUrD5C,mBVsDyB,CAAA,IAAI,cAAc,EAAE,CUtDrB;;kBCAxB,CAAA,IAAI,KAAK;;;;oBXuDU,CAAA,MAAM,CAAC,gBAAgB,CAAC;AAGnC,CAAA,iBAAI,KAAK,CAAC,qBAAqB,CAAE;AAAE,CAAA,iBAAE,CAAF,GAAE;AAAE,CAAA,mBAAI,CAAJ,KAAI;CAAA,cAAE,CAAC,CAAC;AAC/C,CAAA,eAAE,IAAG,EAAG,EAAA,GAAE,EAAG,CAAA,IAAI,cAAc,EAAG,KAAI,CAAE,CAAC;qBAC/B,qJAIkC,EAAA,KAAI,EAAA,kCAC3B,EAAA,GAAE,EAAA,oBAAmB,EAAA,KAAI,EAAA,+CACX,EAAA,KAAI,EAAA,uDAGtC;;;;;CUrET,mBVwEc,CAAA,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,WAAE,GAAG,CAAK;CACnC,oBAAM,IAAI,gBAAe,CAAC,SAAS,CAAC,CAAC;eACtC,EAAC,CU1Ec;;AGAxB,CAAA,iBAAI,WAAW,EAAE,CAAA;;;;ACAjB,CAAA,iBAAI,YAAY,Ed4ED,Gc5EqB,Ad4EnB,Cc5EmB;;;;CCApC,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CNCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MP4EZ,CAAC;GACJ;CAID,cAAa,CAAb,UAAc;;AACR,CAAJ,MAAI,CAAA,QAAQ,EAAG;AACb,CAAA,SAAI,CAAM,KAAI;AACd,CAAA,YAAO,CAAG,wBAAuB;AACjC,CAAA,YAAO,CAAG,CAAA,MAAM,CAAC,aAAa,CAAC;AAC/B,CAAA,aAAQ,YAAG,KAAK,CAAK;AACf,CAAJ,UAAI,CAAA,IAAI,EAAS,EAAE,EAAE,CAAE,MAAK,CAAE,CAAC;AAC3B,CAAJ,UAAI,CAAA,QAAQ,EAAK,CAAA,MAAM,CAAC,uBAAuB,CAAE,KAAI,CAAC,CAAC;AACnD,CAAJ,UAAI,CAAA,UAAU,EAAG,CAAA,MAAM,CAAC,sBAAsB,CAAE,KAAI,CAAC,CAAC;AAClD,CAAJ,UAAI,CAAA,MAAM,EAAO,EAAE,WAAW,CAAE,UAAS,CAAE,CAAC;CAG5C,WAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAE;CAAE,eAAO,WAAU,CAAC;SAAE;AAC1C,CAD0C,WACtC,CAAC,SAAS,CAAC,MAAM,CAAE,MAAK,CAAC,CAAE;CAAE,eAAO,SAAQ,CAAC;SAAE;AAEnD,CAFmD,aAE5C,KAAI,CAAC;OACb,CAAA;KACF,CAAC;CAEF,SAAO,CAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KACrB,WAAE,OAAO,CAAK;CACjB,WAAO,CAAA,OAAO,GAAG,CAAC;KACnB,EAAC,CAAC;GACN;MAjG4B,QAAO,CMRmB;AUDzD,CAAA,KAAM,QAAQ;CCAd,gBAAwB;CAAE,oBAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;ChB4GnC","sourcesContent":["import { _, os, Q, async } from 'azk';\nimport { config, set_config } from 'azk';\nimport { UIProxy } from 'azk/cli/ui';\nimport { OSNotSupported, DependencyError } from 'azk/utils/errors';\nimport { isIPv4 } from 'net';\n\nvar which = require('which');   // Search for command in path\nvar qfs   = require('q-io/fs');\n\nexport class Configure extends UIProxy {\n  constructor(user_interface) {\n    super(user_interface);\n    this.dns_separator = ':';\n  }\n\n  // Run configures and checks by operational system\n  run() {\n    var method = this[os.platform()];\n    if (method) {\n      return method.apply(this);\n    } else {\n      throw new OSNotSupported(os.platform());\n    }\n  }\n\n  // Mac OS X configure and checks\n  // TODO: Check dependencies versions\n  darwin() {\n    this.dns_separator = '.';\n    return Q.all([\n      this._which('VBoxManage'),\n      this._which('unfsd'),\n      this._checkAndConfigureNetwork(),\n    ]);\n  }\n\n  // Linux configure and checks\n  //linux() {\n  //}\n\n  _which(command) {\n    return Q\n      .nfcall(which, command)\n      .fail(() => {\n        throw new DependencyError(command);\n      });\n  }\n\n  _checkAndConfigureNetwork() {\n    return async(this, function* () {\n      var file  = config('agent:balancer:file_dns');\n      var exist = yield qfs.exists(file);\n      if (!exist) {\n        this.warning('configure.vm_ip_msg');\n        var ip   = yield this._getNetworkIp();\n        var port = config('agent:dns:port');\n\n        // Creating resolver file and adding ip (with sudo)\n        this.info('configure.adding_ip', { ip, file });\n        ip = `${ip}${this.dns_separator}${port}`;\n        var cmd = `\n          echo \"\";\n          set -x;\n          sudo mkdir -p /etc/resolver 2>/dev/null;\n          echo \"# azk agent configure\" | sudo tee ${file};\n          echo \"nameserver ${ip}\" | sudo tee -a ${file};\n          sudo chown \\$(id -u):\\$(id -g) ${file};\n          set +x;\n          echo \"\";\n        `;\n\n        // Call interactive shell (to support sudo)\n        yield this.execSh(cmd).fail((err) => {\n          throw new DependencyError('network');\n        });\n\n        return ip;\n      }\n    });\n  }\n\n  // TODO: improve to get a free network ip ranges\n  // TODO: filter others /etc/resolver/* azk files\n  _getNetworkIp() {\n    var question = {\n      name    : 'ip',\n      message : 'configure.ip_question',\n      default : config('agent:vm:ip'),\n      validate: (value) => {\n        var data       = { ip: value };\n        var of_range   = this.t('configure.ip_of_range', data);\n        var ip_invalid = this.t('configure.ip_invalid', data);\n        var ranges     = [ '127.0.0.1', '0.0.0.0' ];\n\n        // Check is valid ip\n        if (!isIPv4(value)) { return ip_invalid; }\n        if (_.contains(ranges, value)) { return of_range; }\n\n        return true;\n      }\n    };\n\n    return this.prompt(question)\n      .then((answers) => {\n        return answers.ip;\n      });\n  }\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.maybeThrow()","$ctx.returnValue = $__placeholder__0","return $ctx.end()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}