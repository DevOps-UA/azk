{"version":3,"file":"configure.js","sources":["../../../src/agent/configure.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","src/agent/configure.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/18","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","sourcesContent":["module.exports = function() {\n            $__placeholder__0\n          }.call($__placeholder__1);","var __moduleName = $__placeholder__0;","require($__placeholder__0)","import { _, os, Q, async, dynamic } from 'azk';\nimport { config, set_config } from 'azk';\nimport { UIProxy } from 'azk/cli/ui';\nimport { OSNotSupported, DependencyError } from 'azk/utils/errors';\nimport { isIPv4 } from 'net';\n\nvar which = require('which');   // Search for command in path\nvar qfs   = require('q-io/fs');\n\ndynamic(this, {\n  docker() {\n    return require('azk/docker').default;\n  },\n  exec() {\n    return require('child_process').exec;\n  },\n});\n\nvar ports_tabs = {\n  linux : \":\",\n  darwin: \".\",\n};\n\nexport class Configure extends UIProxy {\n  constructor(user_interface) {\n    super(user_interface);\n    this.dns_tab = ports_tabs[os.platform()];\n  }\n\n  // Run configures and checks by operational system\n  run() {\n    var method = this[os.platform()];\n    if (method) {\n      return method.apply(this)\n        .then((confgs) => {\n          return _.reduce(confgs, (acc, lines) => {\n            if (!_.isEmpty(lines)) {\n              _.each(lines, (line, key) => acc[key] = line);\n            }\n            return acc;\n          }, {});\n        });\n    } else {\n      throw new OSNotSupported(os.platform());\n    }\n  }\n\n  // Mac OS X configure and checks\n  // TODO: Check dependencies versions\n  darwin() {\n    return this._checksForRequiresVm();\n  }\n\n  // Linux configure and checks\n  linux() {\n    if (config('agent:requires_vm')) {\n      return this._checksForRequiresVm();\n    } else {\n      var socket = config('docker:socket');\n      return Q\n        .all([\n          this._checkDockerSocket(socket),\n          this._checkAndConfigureNetwork(false),\n          //this._loadDnsServers(),\n        ])\n        .fail((err) => {\n          throw new DependencyError('docker_access', { socket });\n        });\n    }\n  }\n\n  _checksForRequiresVm() {\n    return Q.all([\n      this._which('VBoxManage'),\n      this._which('unfsd', 'paths:unfsd'),\n      this._checkAndConfigureNetwork(),\n      this._checkAndGenerateSSHKeys(),\n      this._loadDnsServers(),\n    ]);\n  }\n\n  _checkDockerSocket(socket) {\n    var host   = `unix://${socket}`;\n    set_config('docker:host', host);\n\n    return docker.info()\n      .then((info) => {\n        return { 'docker:host': host };\n      });\n  }\n\n  _which(command, save_key = null) {\n    return Q.nfcall(which, command)\n      .then((path) => {\n        if (save_key) return { [save_key]: path };\n      })\n      .fail(() => {\n        throw new DependencyError(command);\n      });\n  }\n\n  // Check for ssh keys, used for connection vm\n  _checkAndGenerateSSHKeys() {\n    var file = config('agent:vm:ssh_key');\n    return qfs.exists(file).then((exist) => {\n      if (!exist) {\n        this.info('configure.generating_key');\n        var script = `\n          set -x;\n          ssh-keygen -t rsa -f ${file} -N ''; result=$?;\n          set +x;\n          echo \"\";\n          exit $result;\n        `;\n        return this.execSh(script).then((code) => {\n          if (code != 0) {\n            throw new DependencyError('ssh_keygen');\n          } else {\n            return code;\n          }\n        });\n      }\n    });\n  }\n\n  // Check vm ip is configurat\n  _checkAndConfigureNetwork(use_vm = true) {\n    return async(this, function* () {\n      var file   = config('agent:balancer:file_dns');\n      var exist  = yield qfs.exists(file);\n      var ip     = null;\n      var result = {};\n\n      // File exist? Get content\n      if (exist) {\n        var content = yield qfs.read(file);\n        ip = this._parseNameserver(content)[0];\n      }\n\n      // Not exist or invalid content\n      if (_.isEmpty(ip)) {\n        if (use_vm) {\n          this.warning('configure.vm_ip_msg');\n          ip = yield this._getNetworkIp();\n          result['docker:host'] = `http://${ip}:2375`;\n        } else {\n          ip = yield this._getDockerIp();\n        }\n        yield this._generateResolverFile(ip, file);\n      }\n\n      // Save configuration\n      return _.merge({\n        ['agent:vm:ip']      : ip,\n        ['agent:dns:ip']     : ip,\n        ['agent:balancer:ip']: ip,\n      }, result);\n    });\n  }\n\n  // Generate file /etc/resolver/*\n  _generateResolverFile(ip, file) {\n    var port = config('agent:dns:port');\n\n    // Creating resolver file and adding ip (with sudo)\n    this.info('configure.adding_ip', { ip, file });\n    ip = `${ip}${this.dns_tab}${port}`;\n    var script = `\n      echo \"\";\n      set -x;\n      sudo mkdir -p /etc/resolver 2>/dev/null;\n      echo \"# azk agent configure\" | sudo tee ${file};\n      echo \"nameserver ${ip}\" | sudo tee -a ${file};\n      sudo chown \\$(id -u):\\$(id -g) ${file};\n      set +x;\n      echo \"\";\n    `;\n\n    // Call interactive shell (to support sudo)\n    return this.execSh(script).then((code) => {\n      if (code != 0) {\n        throw new DependencyError('network');\n      } else {\n        return code;\n      }\n    });\n  }\n\n  _parseNameserver(content) {\n    var lines   = content.split('\\n');\n    var regex   = /^\\s*nameserver\\s{1,}((?:[0-9]{1,3}\\.){3}[0-9]{1,3})/;\n    var capture = null;\n    return _.reduce(lines, (nameservers, line) => {\n      if (capture = line.match(regex)) {\n        var ip = capture[1];\n        if (isIPv4(ip)) nameservers.push(ip);\n      }\n      return nameservers;\n    }, []);\n  }\n\n  // TODO: improve to get a free network ip ranges\n  // TODO: filter others /etc/resolver/* azk files\n  _getNetworkIp() {\n    var question = {\n      name    : 'ip',\n      message : 'configure.ip_question',\n      default : config('agent:vm:ip'),\n      validate: (value) => {\n        var data       = { ip: value };\n        var of_range   = this.t('configure.ip_of_range', data);\n        var ip_invalid = this.t('configure.ip_invalid', data);\n        var ranges     = [ '127.0.0.1', '0.0.0.0' ];\n\n        // Check is valid ip\n        if (!isIPv4(value)) { return ip_invalid; }\n        if (_.contains(ranges, value)) { return of_range; }\n\n        return true;\n      }\n    };\n\n    return this.prompt(question)\n      .then((answers) => {\n        return answers.ip;\n      });\n  }\n\n  _getDockerIp() {\n    var cmd   = \"/sbin/ifconfig docker0\";\n    var regex = /inet\\s(?:addr:){0,1}(.*?)\\s.*(?:Mask|netmask)/m;\n\n    return Q.nfcall(exec, cmd)\n      .spread((stdout) => {\n        var match = stdout.match(regex);\n        if (match) { return match[1]; }\n        throw new Error('Get ip from docker0 interface');\n      });\n  }\n\n  _loadDnsServers() {\n    return async(this, function* () {\n      var cf_key = 'agent:dns:nameservers';\n      var nameservers = this._filderDnsServers(config(cf_key));\n\n      if (_.isEmpty(nameservers)) {\n        nameservers = this._filderDnsServers(yield this._readResolverFile());\n      }\n\n      if (_.isEmpty(nameservers)) {\n        nameservers = config('agent:dns:defaultserver');\n      }\n\n      return { [cf_key]: nameservers };\n    });\n  }\n\n  _filderDnsServers(nameservers) {\n    return _.filter(nameservers, (server) => { return !server.match(/^127\\./) });\n  }\n\n  _readResolverFile() {\n    var file = \"/etc/resolv.conf\";\n    return qfs.read(file).then(this._parseNameserver);\n  }\n}\n","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.maybeThrow()","$ctx.returnValue = $__placeholder__0","return $ctx.end()","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","typeof global !== 'undefined' ? global : this"]}