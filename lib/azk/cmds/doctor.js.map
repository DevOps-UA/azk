{"version":3,"file":"doctor.js","sources":["../../../src/cmds/doctor.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","src/cmds/doctor.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","sourcesContent":["module.exports = function() {\n            $__placeholder__0\n          }.call($__placeholder__1);","var __moduleName = $__placeholder__0;","require($__placeholder__0)","import { _, async, config, dynamic } from 'azk';\nimport { Command } from 'azk/cli/command';\nimport Azk from 'azk';\n\ndynamic(this, {\n  Client() {\n    return require('azk/agent/client').Client;\n  },\n});\n\nclass Cmd extends Command {\n  get docker() {\n    return require('azk/docker').default;\n  }\n\n  action(opts) {\n    return async(this, function* () {\n      // Get agent status\n      var agent = yield Client.status();\n      var require_vm = config(\"agent:requires_vm\");\n\n      // Mount data to render\n      var data = {\n        version: Azk.version,\n        docker: require_vm && !agent.agent ? { Version: \"down\".red } : yield this.docker.version(),\n        use_vm: require_vm ? \"yes\".green : \"no\".yellow,\n        agent_running: agent.agent ? \"up\".green : \"down\".red,\n      };\n\n      var render = opts.logo ? this.render_with_logo : this.render_normal;\n      this.output(render.apply(this, [data]));\n    });\n  }\n\n  render_with_logo(data) {\n    var data_string = this.render_normal(data);\n    data_string = data_string.split(\"\\n\");\n\n    return `\n               ${\"##########\".blue}\n           ${\"##################\".blue}\n         ${\"######################\".blue}\n        ${\"########################\".blue}      ${data_string[1]}\n       ${\"#################  #######\".blue}     ${data_string[2]}\n      ${\"##################  ########\".blue}    ${data_string[3]}\n     ${\"####     ##       #  ###  ####\".blue}   ${data_string[4]}\n     ${\"########  ####   ##  #  ######\".blue}\n     ${\"###  ###  ##   ####  ##  #####\".blue}\n      ${\"##    #  #       #  ###  ###\".blue}\n       ${\"##########################\".blue}\n        ${\"########################\".blue}\n         ${\"######################\".blue}\n            ${\"################\".blue}\n               ${\"##########\".blue}\n    `;\n  }\n\n  render_normal(data) {\n    return `\n      ${\"Azk\".cyan}   : ${data.version.blue}\n      ${\"Agent\".cyan} : ${data.agent_running}\n      ${\"Docker\".cyan}: ${data.docker.Version}\n      ${\"Use vm\".cyan}: ${data.use_vm}\n    `;\n  }\n}\n\nexport function init(cli) {\n  (new Cmd('doctor', cli))\n    .addOption(['--logo'], { default: false });\n}\n\n","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","return $ctx.end()","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","typeof global !== 'undefined' ? global : this"]}