{"version":3,"file":"init.js","sources":["../../../src/cmds/init.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;;ACAI,CAAJ,EAAI,CAAA,YAAY,kBAAoB,CAAC;UCArC,CAAA,OAAO,CFAoC,KAAK,CEAtB;;;;;;UAA1B,CAAA,OAAO,CFC0B,iBAAiB,CEDxB;;;UAA1B,CAAA,OAAO,CFEmC,eAAe,CEF/B;;;ACAtB,CAAJ,EAAI,MHIJ,SAAM,IAAG;AIJT,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,eAA2B,CAAE,UAAS,CAAC,CAAA;CDDd,AHiCxC,CGjCwC;AEArC,CAAJ,EAAI,WAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;QNK3B,UAAO,IAAI;CACT,SAAO,CAAA,KAAK,CAAC,IAAI,WAAa;;;;;;;CONlC,WAAO,CCAP,eAAe,cAAc,ADAL,CEAxB,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;wBTMI,CAAA,MAAM,CAAC,UAAU,CAAC;mBACtB,CAAA,IAAI,KAAK,GAAI,CAAA,IAAI,IAAI;oBACrB,CAAA,IAAI,KAAK,CAAC,GAAG,CAAE,SAAQ,CAAC;yBACnB,IAAI,UAAS,CAAC,IAAI,CAAC;;;;AUVzC,CAAA,iBAAI,MAAM,EAAG,CAAA,CVYH,EAAE,WAAW,CAAC,IAAI,CAAC,CAAA,EAAI,EAAC,IAAI,MAAM,CUZZ,QAAwC,CAAC;CACjE,mBAAK;;AVYL,CAAA,iBAAI,KAAK,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,CAAE,SAAQ,CAAC,CAAC;;;;AWbtD,CAAA,iBAAI,YAAY,EXcD,EWdqB,AXcpB,CWdoB;;;;uBXiBhB,CAAA,SAAS,YAAY,CAAC,GAAG,CAAC;CACxC,iBAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAE;AACtB,CAAA,mBAAI,KAAK,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AACtC,CAAA,sBAAO,0CAAM,CAAA,cAAc,KAAK;wBAAG,eAAc;;;;yBAAE,CAAC;eACrD;AAED,CAFC,sBAEQ,OAAO,CAAC,CAAE,OAAO,CAAP,QAAO,CAAE,CAAE,KAAI,CAAC,CAAC;AACpC,CAAA,iBAAI,GAAG,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAE,SAAQ,CAAC,CAAC;CAG9C,iBAAI,EAAE,WAAW,CAAC,IAAI,KAAK,CAAC,GAAG,CAAE,OAAM,CAAC,CAAC;AACvC,CAAA,mBAAI,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;CAAA;;;AW5B9C,CAAA,iBAAI,YAAY,EX8BH,EW9BuB,AX8BtB,CW9BsB;;;;CCApC,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CHCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MP6BZ,CAAC;GACJ;;;;cA5Be,QAAO,CMHgC;CNkClD,OAAS,KAAI,CAAC,GAAG,CAAE;CACxB,OAAO,CAAA,GAAI,IAAG,CAAC,aAAa,CAAE,IAAG,CAAC,UACtB,CAAC,CAAC,SAAS,CAAE,KAAI,CAAC,CAAE,EAAE,OAAO,CAAE,MAAK,CAAE,CAAC,CAAC;CACrD;AatCD,CbsCC,KatCK,QAAQ;CCAd,WAAwB;CAAE,eAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CbwCnC","sourcesContent":["import { _, config, fs, path, async } from 'azk';\nimport { Command, Helpers } from 'azk/cli/command';\nimport { Generator, example_system } from 'azk/generator';\n\nclass Cmd extends Command {\n  action(opts) {\n    return async(this, function* () {\n      var manifest = config(\"manifest\");\n      var cwd  = opts.path || this.cwd;\n      var file = path.join(cwd, manifest);\n      var generator = new Generator(this);\n\n      if (fs.existsSync(file) && !opts.force) {\n        this.fail(this.tKeyPath(\"already\"), manifest);\n        return 1;\n      }\n\n      var systems = generator.findSystems(cwd);\n      if (_.isEmpty(systems)) {\n        this.fail(this.tKeyPath(\"not_found\"));\n        systems = { [example_system.name]: example_system };\n      }\n\n      generator.render({ systems }, file);\n      this.ok(this.tKeyPath('generated'), manifest);\n\n      // Only show tips if is a git dir\n      if (fs.existsSync(path.join(cwd, \".git\")))\n        this.tOutput(this.tKeyPath('github'));\n\n      return 0;\n    });\n  }\n}\n\nexport function init(cli) {\n  return new Cmd('init [path]', cli)\n    .addOption(['--force', '-f'], { default: false });\n}\n\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.returnValue = $__placeholder__0","return $ctx.end()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}