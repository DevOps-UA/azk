{"version":3,"file":"init.js","sources":["../../../src/cmds/init.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","src/cmds/init.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"AAAA,MAAM,QAAQ,EAAG,CAAA,SAAS;;;ACAtB,CAAJ,IAAI,CAAA,YAAY,kBAAoB,CAAC;YCArC,CAAA,OAAO,CCA6C,KAAK,CDA/B;;;;;;;YAA1B,CAAA,OAAO,CCC0B,iBAAiB,CDDxB;;;ACG1B,CAAA,QAAO,CAAC,IAAI,CAAE;CACZ,YAAS,CAAT,UAAU,CAAE;CACV,WAAO,CAAA,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC;KAC3C;CAED,iBAAc,CAAd,UAAe,CAAE;CACf,WAAO,CAAA,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC;KAChD;CAAA,EACF,CAAC,CAAC;ACXC,CAAJ,IAAI,MDaJ,SAAM,IAAG;AEbT,CAAA,kBAAe,iBAAiB,CAAC,IAAI,CACrB,eAA2B,CAAE,UAAS,CAAC,CAAA;GDDd,AD0CxC,CC1CwC;AEArC,CAAJ,IAAI,WAAqC,CAAA;ACAzC,CAAA,EAAC,eAAe,YAAY,CAAC;UJc3B,UAAO,IAAI;CACT,WAAO,CAAA,KAAK,CAAC,IAAI,WAAa;;;;;;;CKflC,aAAO,CCAP,eAAe,cAAc,ADAL,CEAxB,SAAS,IAAI,CAAE;CACT,gBAAO,IAAI;;;0BPeI,CAAA,MAAM,CAAC,UAAU,CAAC;qBACtB,CAAA,IAAI,KAAK,GAAI,CAAA,IAAI,IAAI;sBACrB,CAAA,IAAI,KAAK,CAAC,GAAG,CAAE,SAAQ,CAAC;2BACnB,IAAI,UAAS,CAAC,IAAI,CAAC;;;;AQnBzC,CAAA,mBAAI,MAAM,EAAG,CAAA,CRqBH,EAAE,WAAW,CAAC,IAAI,CAAC,CAAA,EAAI,EAAC,IAAI,MAAM,CQrBZ,QAAwC,CAAC;CACjE,qBAAK;;ARqBL,CAAA,mBAAI,KAAK,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,CAAE,SAAQ,CAAC,CAAC;;;;AStBtD,CAAA,mBAAI,YAAY,ETuBD,ESvBqB,ATuBpB,CSvBoB;;;;yBT0BhB,CAAA,SAAS,YAAY,CAAC,GAAG,CAAC;CACxC,mBAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAE;AACtB,CAAA,qBAAI,KAAK,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AACtC,CAAA,wBAAO,0CAAM,CAAA,cAAc,KAAK;0BAAG,eAAc;;;;2BAAE,CAAC;iBACrD;AAED,CAFC,wBAEQ,OAAO,CAAC,CAAE,OAAO,CAAP,QAAO,CAAE,CAAE,KAAI,CAAC,CAAC;AACpC,CAAA,mBAAI,GAAG,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAE,SAAQ,CAAC,CAAC;CAG9C,mBAAI,EAAE,WAAW,CAAC,IAAI,KAAK,CAAC,GAAG,CAAE,OAAM,CAAC,CAAC;AACvC,CAAA,qBAAI,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;CAAA;;;ASrC9C,CAAA,mBAAI,YAAY,ETuCH,ESvCuB,ATuCtB,CSvCsB;;;;CCApC,qBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CHCmB,QAC/B,CFAO,KAAI,CAAC,CAAC;QLsCZ,CAAC;KACJ;;;;gBA5Be,QAAO,CIZgC;CJ2ClD,SAAS,KAAI,CAAC,GAAG,CAAE;CACxB,SAAO,CAAA,GAAI,IAAG,CAAC,aAAa,CAAE,IAAG,CAAC,UACtB,CAAC,CAAC,SAAS,CAAE,KAAI,CAAC,CAAE,EAAE,OAAO,CAAE,MAAK,CAAE,CAAC,CAAC;GACrD;AW/CD,CX+CC;CY/CD,aAAwB;CAAE,iBAAyB;KAAE;ACArD,CAAA,aAAU,CAAE,KAAI;CAAA,GFAQ;CdEb,KAAK,CiBFhB,MAAO,OAAM,CAAA,GAAK,YAAW,CAAA,CAAG,OAAM,EAAG,KAAI,CjBEV,CAAC;CG+CpC","sourcesContent":["module.exports = function() {\n            $__placeholder__0\n          }.call($__placeholder__1);","var __moduleName = $__placeholder__0;","require($__placeholder__0)","import { _, config, fs, path, async, dynamic } from 'azk';\nimport { Command, Helpers } from 'azk/cli/command';\n\ndynamic(this, {\n  Generator() {\n    return require('azk/generator').Generator;\n  },\n\n  example_system() {\n    return require('azk/generator').example_system;\n  }\n});\n\nclass Cmd extends Command {\n  action(opts) {\n    return async(this, function* () {\n      var manifest = config(\"manifest\");\n      var cwd  = opts.path || this.cwd;\n      var file = path.join(cwd, manifest);\n      var generator = new Generator(this);\n\n      if (fs.existsSync(file) && !opts.force) {\n        this.fail(this.tKeyPath(\"already\"), manifest);\n        return 1;\n      }\n\n      var systems = generator.findSystems(cwd);\n      if (_.isEmpty(systems)) {\n        this.fail(this.tKeyPath(\"not_found\"));\n        systems = { [example_system.name]: example_system };\n      }\n\n      generator.render({ systems }, file);\n      this.ok(this.tKeyPath('generated'), manifest);\n\n      // Only show tips if is a git dir\n      if (fs.existsSync(path.join(cwd, \".git\")))\n        this.tOutput(this.tKeyPath('github'));\n\n      return 0;\n    });\n  }\n}\n\nexport function init(cli) {\n  return new Cmd('init [path]', cli)\n    .addOption(['--force', '-f'], { default: false });\n}\n\n","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.returnValue = $__placeholder__0","return $ctx.end()","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","typeof global !== 'undefined' ? global : this"]}