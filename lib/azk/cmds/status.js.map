{"version":3,"file":"status.js","sources":["../../../src/cmds/status.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/18","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,CAAA,YAAY,oBAAoB,CAAC;UCArC,CAAA,OAAO,CFAkC,KAAK,CEApB;;;;;;UAA1B,CAAA,OAAO,CFC0B,iBAAiB,CEDxB;;;cAA1B,CAAA,OAAO,CFEkB,cAAc,CEFb;UAA1B,CAAA,OAAO,CFGqD,kBAAkB,CEHpD;;;ACAtB,CAAJ,EAAI,MHKJ,SAAM,IAAG;AILT,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,eAA2B,CAAE,UAAS,CAAC,CAAA;CDDd,AH2DxC,CG3DwC;AEArC,CAAJ,EAAI,WAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC,ONM3B,MAAM,CAAN,UAAO,IAAI;CACT,SAAO,CAAA,KAAK,CAAC,IAAI,WAAa;;;COPlC,WAAO,CCAP,eAAe,cAAc,ADAL,CEAxB,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;;CCDjB,mBVQY,CAAA,OAAO,aAAa,EAAE,CURV;;ACAxB,CAAA,iBAAI,WAAW,EAAE,CAAA;;;;wBXUI,IAAI,SAAQ,CAAC,IAAI,IAAI,CAAE,KAAI,CAAC;uBAC5B,CAAA,OAAO,iBAAiB,CAAC,QAAQ,CAAE,CAAA,IAAI,OAAO,CAAC;;;;;CUXpE,mBVaY,CAAA,WAAU,CAAC,IAAI,CAAE,SAAQ,CAAE,QAAO,CAAC,CUbvB;;ACAxB,CAAA,iBAAI,WAAW,EAAE,CAAA;;;;CCAjB,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CHCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MPYZ,CAAC;GACJ;CAEM,OAAM,CAAb,UAAc,GAAG,CAAE,CAAA,QAAQ,CAAE,CAAA,OAAO;CAClC,SAAO,CAAA,KAAK,CAAC,GAAG,WAAa;;;;;;;;;;;;COlBjC,WAAO,CCAP,eAAe,cAAc,ADAL,CEAxB,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;uBTkBG,EAAC,QAAQ,KAAK,CAAE,CAAA,QAAQ,MAAM,CAAE,CAAA,WAAW,OAAO,CAAE,CAAA,UAAU,MAAM,CAAE,CAAA,iBAAiB,QAAQ,CAAC;4BAC3F,CAAA,IAAI,UAAU,CAAC,cAAc,CAAE,EAAE,IAAI,CAAE,QAAO,CAAE,CAAC;;;;oBalBzD,CboBQ,OAAO,CapBG,MAAM,SAAS,CAAC,EAAE;;;;ACFrD,CAAA,iBAAI,MAAM,EAAG,CAAA,CDIA,CAAC,CAAC,MAAoB,CAAA,SAAsB,EAAE,CAAC,KAAK,CCJjC,UAAwC,CAAC;CACjE,mBAAK;;;;;;;CJDb,mBVuB8B,CAAA,MAAM,UAAU,EAAE,CUvBxB;;yBKAxB,CAAA,IAAI,KAAK;;;;CfyBD,iBAAI,MAAM,YAAY,GAAI,CAAA,SAAS,OAAO,EAAG,EAAC,CAAE;0BAC/B,CAAA,MAAM,IAAI;eAC1B,KAAM;0BACU,CAAA,MAAM,SAAS;eAC/B;CAAA;;;;CU7BT,mBV8B4B,CAAA,eAAc,CAAC,MAAM,CAAE,UAAS,CAAC,CU9BrC;;qBKAxB,CAAA,IAAI,KAAK;;;;sBf+Ba,CAAA,SAAS,OAAO,EAAG,EAAC,CAAA,CAAG,CAAA,IAAI,MAAM,EAAG,CAAA,MAAM,IAAI;uBAC9C,CAAA,MAAM,SAAS,EAAG,CAAA,SAAS,OAAO,EAAG,IAAG;oBAEzC,EAAC,MAAM,KAAK,CAAE,OAAM,CAAE,QAAO,CAAE,SAAQ,CAAE,CAAA,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;AACvE,CAAA,iBAAI,WAAW,CAAC,YAAY,CAAE,KAAI,CAAC,CAAC;;;;AAGtC,CAAA,iBAAI,WAAW,CAAC,YAAY,CAAC,CAAC;;;;CYtCpC,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CHCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MPqCZ,CAAC;GACJ;CAEM,WAAU,CAAjB,UAAkB,MAAM,CAAE,CAAA,SAAS;CACjC,SAAO,CAAA,KAAK,UAAY;;;CO3C5B,WAAO,CCAP,eAAe,cAAc,ADAL,CEAxB,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;qBT2CW,GAAE;AAExB,CAAA,sBAAS,EAAG,CAAA,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;CAC/B,oBAAM,QAAQ,EAAG,CAAA,SAAS,IAAI,EAAE,CAAE;AAChC,CAAA,gBAAC,KAAK,CAAC,QAAQ,gBAAgB,OAAO,YAAG,IAAI,CAAK;AAC5C,CAAJ,oBAAI,CAAA,IAAI,EAAG,CAAA,MAAM,SAAS,CAAC,IAAI,KAAK,CAAC,CAAC;AACtC,CAAA,sBAAK,KAAK,EACL,QAAQ,YAAY,IAAI,IAAI,EAAA,IAAI,EAAA,KAAI,EAAA,IAAI,IAAA,IAAI,KAAK,GAAI,CAAA,KAAK,IAAI,GAClE,CAAC;iBACH,EAAC,CAAC;eACJ;CAAA;;;AgBtDP,CAAA,iBAAI,YAAY,EhBwDH,CAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA,CAAG,EAAC,GAAG,CAAC,EAAG,MgBxDJ,AhBwDS,CgBxDT;;;;CJApC,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CHCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MPuDZ,CAAC;GACJ;EArDe,QAAO,CMJgC;;CN6DlD,OAAS,KAAI,CAAC,GAAG,CAAE;AACxB,CAAA,EAAC,GAAI,IAAG,CAAC,iBAAiB,CAAE,IAAG,CAAC,CAAC,CAAC;CACnC;AiBhED,CjBgEC,KiBhEK,QAAQ;CCAd,UAAwB;CAAE,cAAyB;GAAE;CAArD,WAAwB;CAAE,eAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CjBkEnC","sourcesContent":["import { log, _, async, config, t } from 'azk';\nimport { Command, Helpers } from 'azk/cli/command';\nimport { Manifest } from 'azk/manifest';\nimport { SYSTEMS_CODE_ERROR, NotBeenImplementedError } from 'azk/utils/errors';\n\nclass Cmd extends Command {\n  action(opts) {\n    return async(this, function* () {\n      yield Helpers.requireAgent();\n\n      var manifest = new Manifest(this.cwd, true);\n      var systems  = Helpers.getSystemsByName(manifest, opts.system);\n\n      yield Cmd.status(this, manifest, systems);\n    });\n  }\n\n  static status(cli, manifest, systems) {\n    return async(cli, function* () {\n      var columns = ['System'.blue, 'Status'.green, 'Instances'.yellow, 'Hostname'.green, 'Instances-Ports'.magenta];\n      var table_status = this.table_add('table_status', { head: columns });\n\n      for (var system of systems) {\n        var instances = yield system.instances();\n\n        if (system.balanceable && instances.length > 0) {\n          var hostname = system.url;\n        } else {\n          var hostname = system.hostname;\n        }\n        var ports   = yield Cmd._ports_map(system, instances);\n        var status  = instances.length > 0 ? 'UP'.green : 'DOWN'.red;\n        var counter = system.scalable ? instances.length : '-';\n\n        var line   = [system.name, status, counter, hostname, ports.join(', ')];\n        this.table_push(table_status, line);\n      }\n\n      this.table_show(table_status);\n    });\n  }\n\n  static _ports_map(system, instances) {\n    return async(function* () {\n      var instance, ports = [];\n\n      instances = _.clone(instances);\n      while(instance = instances.pop()) {\n        _.each(instance.NetworkSettings.Access, (port) => {\n          var name = system.portName(port.name);\n          ports.push(\n            `${instance.Annotations.azk.seq}-${name}:${port.port || \"n/m\".red}`\n          );\n        });\n      }\n\n      return _.isEmpty(ports) ? [\"-\"] : ports;\n    });\n  }\n}\n\nexport { Cmd };\nexport function init(cli) {\n  (new Cmd('status [system]', cli));\n}\n\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.maybeThrow()","return $ctx.end()","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.sent","$ctx.returnValue = $__placeholder__0","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}