{"version":3,"file":"agent.js","sources":["../../../src/cmds/agent.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/24","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,CAAA,YAAY,mBAAoB,CAAC;UCArC,CAAA,OAAO,CFAkC,KAAK,CEApB;;;;;UAA1B,CAAA,OAAO,CFC0B,iBAAiB,CEDxB;;;ACAtB,CAAJ,EAAI,MHGJ,SAAM,IAAG;AIHT,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,eAA2B,CAAE,UAAS,CAAC,CAAA;CDDd,AHcxC,CGdwC;AEArC,CAAJ,EAAI,WAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC,ONI3B,MAAM,CAAN,UAAO,IAAI;AACL,CAAJ,MAAI,CAAA,MAAM,EAAK,CAAA,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC;AAC9C,CAAJ,MAAI,CAAA,QAAQ,EAAG,CAAA,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACzC,CAAJ,MAAI,CAAA,OAAO,EAAI,CAAA,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;CAE5D,SAAO,CAAA,OAAO,KAAK,WAAE,MAAM,CAAK;CAC9B,SAAI,IAAI,OAAO,GAAI,SAAQ;CAAE,aAAO,OAAM,CAAC;AAC3C,CAD2C,WACpC,CAAA,CAAC,MAAM,MAAM,CAAC,EAAG,EAAC,EAAG,EAAC,CAAC;KAC/B,EAAC,CAAC;GACJ,MAVe,QAAO,CMFgC;CNelD,OAAS,KAAI,CAAC,GAAG,CAAE;AACxB,CAAA,EAAC,GAAI,IAAG,CAAC,gBAAgB,CAAE,IAAG,CAAC,CAAC,WACnB,CAAC,QAAQ,CAAE,EAAE,OAAO,CAAE,EAAC,OAAO,CAAE,SAAQ,CAAE,OAAM,CAAC,CAAE,CAAC,UACrD,CAAC,CAAC,UAAU,CAAE,KAAI,CAAC,CAAE,EAAE,OAAO,CAAE,MAAK,CAAE,CAAC,CAAA;CACrD;AOpBD,CPoBC,KOpBK,QAAQ;CCAd,WAAwB;CAAE,eAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CPqBnC","sourcesContent":["import { Q, _, config, set_config } from 'azk';\nimport { Command, Helpers } from 'azk/cli/command';\n\nclass Cmd extends Command {\n  action(opts) {\n    var Client   = require('azk/agent/client').Client;\n    var progress = Helpers.vmStartProgress(this);\n    var promise  = Client[opts.action](opts).progress(progress);\n\n    return promise.then((result) => {\n      if (opts.action != \"status\") return result;\n      return (result.agent) ? 0 : 1;\n    });\n  }\n}\n\nexport function init(cli) {\n  (new Cmd('agent {action}', cli))\n    .setOptions('action', { options: ['start', 'status', 'stop'] })\n    .addOption(['--daemon', '-d'], { default: false })\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}